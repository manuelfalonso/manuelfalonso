### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1
  commentId: T:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1
  id: IStrategy`1
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy
  children:
  - SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.CanExecute(`0)
  - SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.Execute(`0)
  - SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.TryToExecute(`0)
  langs:
  - csharp
  - vb
  name: IStrategy<T>
  nameWithType: IStrategy<T>
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>
  type: Interface
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: IStrategy
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 29
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Defines a strategy pattern interface for executing actions based on the provided data.
  example: []
  syntax:
    content: public interface IStrategy<T>
    typeParameters:
    - id: T
      description: The type of data used by the strategy.
    content.vb: Public Interface IStrategy(Of T)
  nameWithType.vb: IStrategy(Of T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T)
  name.vb: IStrategy(Of T)
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.Execute(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.Execute(`0)
  id: Execute(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1
  langs:
  - csharp
  - vb
  name: Execute(T)
  nameWithType: IStrategy<T>.Execute(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>.Execute(T)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Execute
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 35
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Executes the strategy using the provided data.
  example: []
  syntax:
    content: void Execute(T data)
    parameters:
    - id: data
      type: '{T}'
      description: The data needed for the strategy execution.
    content.vb: Sub Execute(data As T)
  overload: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.Execute*
  nameWithType.vb: IStrategy(Of T).Execute(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T).Execute(T)
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.CanExecute(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.CanExecute(`0)
  id: CanExecute(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1
  langs:
  - csharp
  - vb
  name: CanExecute(T)
  nameWithType: IStrategy<T>.CanExecute(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>.CanExecute(T)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CanExecute
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 42
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Checks if the strategy can be executed with the provided data.
  example: []
  syntax:
    content: bool CanExecute(T data)
    parameters:
    - id: data
      type: '{T}'
      description: The data to check for strategy execution eligibility.
    return:
      type: System.Boolean
      description: True if the strategy can be executed; otherwise, false.
    content.vb: Function CanExecute(data As T) As Boolean
  overload: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.CanExecute*
  nameWithType.vb: IStrategy(Of T).CanExecute(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T).CanExecute(T)
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.TryToExecute(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.TryToExecute(`0)
  id: TryToExecute(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1
  langs:
  - csharp
  - vb
  name: TryToExecute(T)
  nameWithType: IStrategy<T>.TryToExecute(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>.TryToExecute(T)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: TryToExecute
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 49
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Attempts to execute the strategy with the provided data.
  example: []
  syntax:
    content: bool TryToExecute(T data)
    parameters:
    - id: data
      type: '{T}'
      description: The data needed for the strategy execution.
    return:
      type: System.Boolean
      description: True if the strategy was executed successfully; otherwise, false.
    content.vb: Function TryToExecute(data As T) As Boolean
  overload: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.TryToExecute*
  nameWithType.vb: IStrategy(Of T).TryToExecute(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T).TryToExecute(T)
references:
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy
  commentId: N:SombraStudios.Shared.Patterns.Behavioural.Strategy
  href: SombraStudios.html
  name: SombraStudios.Shared.Patterns.Behavioural.Strategy
  nameWithType: SombraStudios.Shared.Patterns.Behavioural.Strategy
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Strategy
    name: Strategy
    href: SombraStudios.Shared.Patterns.Behavioural.Strategy.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Strategy
    name: Strategy
    href: SombraStudios.Shared.Patterns.Behavioural.Strategy.html
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.Execute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.Execute
  href: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy-1.html#SombraStudios_Shared_Patterns_Behavioural_Strategy_IStrategy_1_Execute__0_
  name: Execute
  nameWithType: IStrategy<T>.Execute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>.Execute
  nameWithType.vb: IStrategy(Of T).Execute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T).Execute
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.CanExecute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.CanExecute
  href: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy-1.html#SombraStudios_Shared_Patterns_Behavioural_Strategy_IStrategy_1_CanExecute__0_
  name: CanExecute
  nameWithType: IStrategy<T>.CanExecute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>.CanExecute
  nameWithType.vb: IStrategy(Of T).CanExecute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T).CanExecute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.TryToExecute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy`1.TryToExecute
  href: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy-1.html#SombraStudios_Shared_Patterns_Behavioural_Strategy_IStrategy_1_TryToExecute__0_
  name: TryToExecute
  nameWithType: IStrategy<T>.TryToExecute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy<T>.TryToExecute
  nameWithType.vb: IStrategy(Of T).TryToExecute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy(Of T).TryToExecute
