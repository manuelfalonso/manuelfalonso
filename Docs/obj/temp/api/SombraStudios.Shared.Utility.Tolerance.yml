### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Utility.Tolerance
  commentId: T:SombraStudios.Shared.Utility.Tolerance
  id: Tolerance
  parent: SombraStudios.Shared.Utility
  children:
  - SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance(System.Single,System.Single,System.Single)
  - SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance(System.Single,System.Single,System.Single)
  - SombraStudios.Shared.Utility.Tolerance.CheckTolerance(System.Single,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Tolerance
  nameWithType: Tolerance
  fullName: SombraStudios.Shared.Utility.Tolerance
  type: Class
  source:
    remote:
      path: Utility/Tolerance.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Tolerance
    path: ../Assets/Sombra Studios/Shared/Utility/Tolerance.cs
    startLine: 6
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Shared.Utility
  syntax:
    content: public static class Tolerance
    content.vb: Public Module Tolerance
  inheritance:
  - System.Object
- uid: SombraStudios.Shared.Utility.Tolerance.CheckTolerance(System.Single,System.Single,System.Single)
  commentId: M:SombraStudios.Shared.Utility.Tolerance.CheckTolerance(System.Single,System.Single,System.Single)
  id: CheckTolerance(System.Single,System.Single,System.Single)
  parent: SombraStudios.Shared.Utility.Tolerance
  langs:
  - csharp
  - vb
  name: CheckTolerance(float, float, float)
  nameWithType: Tolerance.CheckTolerance(float, float, float)
  fullName: SombraStudios.Shared.Utility.Tolerance.CheckTolerance(float, float, float)
  type: Method
  source:
    remote:
      path: Utility/Tolerance.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CheckTolerance
    path: ../Assets/Sombra Studios/Shared/Utility/Tolerance.cs
    startLine: 15
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Shared.Utility
  summary: Apply tolerance to the desired value and return if new value is acceptable
  example: []
  syntax:
    content: public static bool CheckTolerance(float newValue, float desiredValue, float tolerance)
    parameters:
    - id: newValue
      type: System.Single
      description: ''
    - id: desiredValue
      type: System.Single
      description: ''
    - id: tolerance
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function CheckTolerance(newValue As Single, desiredValue As Single, tolerance As Single) As Boolean
  overload: SombraStudios.Shared.Utility.Tolerance.CheckTolerance*
  nameWithType.vb: Tolerance.CheckTolerance(Single, Single, Single)
  fullName.vb: SombraStudios.Shared.Utility.Tolerance.CheckTolerance(Single, Single, Single)
  name.vb: CheckTolerance(Single, Single, Single)
- uid: SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance(System.Single,System.Single,System.Single)
  commentId: M:SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance(System.Single,System.Single,System.Single)
  id: CheckLessThanTolerance(System.Single,System.Single,System.Single)
  parent: SombraStudios.Shared.Utility.Tolerance
  langs:
  - csharp
  - vb
  name: CheckLessThanTolerance(float, float, float)
  nameWithType: Tolerance.CheckLessThanTolerance(float, float, float)
  fullName: SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance(float, float, float)
  type: Method
  source:
    remote:
      path: Utility/Tolerance.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CheckLessThanTolerance
    path: ../Assets/Sombra Studios/Shared/Utility/Tolerance.cs
    startLine: 33
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Shared.Utility
  summary: Apply positive tolerance to the desired value and return if new value is acceptable
  example: []
  syntax:
    content: public static bool CheckLessThanTolerance(float newValue, float desiredValue, float tolerance)
    parameters:
    - id: newValue
      type: System.Single
      description: ''
    - id: desiredValue
      type: System.Single
      description: ''
    - id: tolerance
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function CheckLessThanTolerance(newValue As Single, desiredValue As Single, tolerance As Single) As Boolean
  overload: SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance*
  nameWithType.vb: Tolerance.CheckLessThanTolerance(Single, Single, Single)
  fullName.vb: SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance(Single, Single, Single)
  name.vb: CheckLessThanTolerance(Single, Single, Single)
- uid: SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance(System.Single,System.Single,System.Single)
  commentId: M:SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance(System.Single,System.Single,System.Single)
  id: CheckGreaterThanTolerance(System.Single,System.Single,System.Single)
  parent: SombraStudios.Shared.Utility.Tolerance
  langs:
  - csharp
  - vb
  name: CheckGreaterThanTolerance(float, float, float)
  nameWithType: Tolerance.CheckGreaterThanTolerance(float, float, float)
  fullName: SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance(float, float, float)
  type: Method
  source:
    remote:
      path: Utility/Tolerance.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CheckGreaterThanTolerance
    path: ../Assets/Sombra Studios/Shared/Utility/Tolerance.cs
    startLine: 49
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Shared.Utility
  summary: Apply negative tolerance to the desired value and return if new value is acceptable
  example: []
  syntax:
    content: public static bool CheckGreaterThanTolerance(float newValue, float desiredValue, float tolerance)
    parameters:
    - id: newValue
      type: System.Single
      description: ''
    - id: desiredValue
      type: System.Single
      description: ''
    - id: tolerance
      type: System.Single
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function CheckGreaterThanTolerance(newValue As Single, desiredValue As Single, tolerance As Single) As Boolean
  overload: SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance*
  nameWithType.vb: Tolerance.CheckGreaterThanTolerance(Single, Single, Single)
  fullName.vb: SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance(Single, Single, Single)
  name.vb: CheckGreaterThanTolerance(Single, Single, Single)
references:
- uid: SombraStudios.Shared.Utility
  commentId: N:SombraStudios.Shared.Utility
  href: SombraStudios.html
  name: SombraStudios.Shared.Utility
  nameWithType: SombraStudios.Shared.Utility
  fullName: SombraStudios.Shared.Utility
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Utility
    name: Utility
    href: SombraStudios.Shared.Utility.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Utility
    name: Utility
    href: SombraStudios.Shared.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SombraStudios.Shared.Utility.Tolerance.CheckTolerance*
  commentId: Overload:SombraStudios.Shared.Utility.Tolerance.CheckTolerance
  href: SombraStudios.Shared.Utility.Tolerance.html#SombraStudios_Shared_Utility_Tolerance_CheckTolerance_System_Single_System_Single_System_Single_
  name: CheckTolerance
  nameWithType: Tolerance.CheckTolerance
  fullName: SombraStudios.Shared.Utility.Tolerance.CheckTolerance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance*
  commentId: Overload:SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance
  href: SombraStudios.Shared.Utility.Tolerance.html#SombraStudios_Shared_Utility_Tolerance_CheckLessThanTolerance_System_Single_System_Single_System_Single_
  name: CheckLessThanTolerance
  nameWithType: Tolerance.CheckLessThanTolerance
  fullName: SombraStudios.Shared.Utility.Tolerance.CheckLessThanTolerance
- uid: SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance*
  commentId: Overload:SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance
  href: SombraStudios.Shared.Utility.Tolerance.html#SombraStudios_Shared_Utility_Tolerance_CheckGreaterThanTolerance_System_Single_System_Single_System_Single_
  name: CheckGreaterThanTolerance
  nameWithType: Tolerance.CheckGreaterThanTolerance
  fullName: SombraStudios.Shared.Utility.Tolerance.CheckGreaterThanTolerance
