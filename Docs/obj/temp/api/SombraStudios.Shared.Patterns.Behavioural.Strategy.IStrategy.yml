### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy
  commentId: T:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy
  id: IStrategy
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy
  children:
  - SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute
  - SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute
  - SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute
  langs:
  - csharp
  - vb
  name: IStrategy
  nameWithType: IStrategy
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy
  type: Interface
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: IStrategy
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 5
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Defines a non-generic strategy pattern interface for executing actions.
  example: []
  syntax:
    content: public interface IStrategy
    content.vb: Public Interface IStrategy
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute
  id: Execute
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: IStrategy.Execute()
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute()
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Execute
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 10
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Executes the strategy.
  example: []
  syntax:
    content: void Execute()
    content.vb: Sub Execute()
  overload: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute*
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute
  id: CanExecute
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy
  langs:
  - csharp
  - vb
  name: CanExecute()
  nameWithType: IStrategy.CanExecute()
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute()
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CanExecute
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 16
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Checks if the strategy can be executed.
  example: []
  syntax:
    content: bool CanExecute()
    return:
      type: System.Boolean
      description: True if the strategy can be executed; otherwise, false.
    content.vb: Function CanExecute() As Boolean
  overload: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute*
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute
  id: TryToExecute
  parent: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy
  langs:
  - csharp
  - vb
  name: TryToExecute()
  nameWithType: IStrategy.TryToExecute()
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute()
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Strategy/IStrategy.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: TryToExecute
    path: ../Patterns/Behavioural/Strategy/IStrategy.cs
    startLine: 22
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Strategy
  summary: Attempts to execute the strategy.
  example: []
  syntax:
    content: bool TryToExecute()
    return:
      type: System.Boolean
      description: True if the strategy was executed successfully; otherwise, false.
    content.vb: Function TryToExecute() As Boolean
  overload: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute*
references:
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy
  commentId: N:SombraStudios.Shared.Patterns.Behavioural.Strategy
  href: SombraStudios.html
  name: SombraStudios.Shared.Patterns.Behavioural.Strategy
  nameWithType: SombraStudios.Shared.Patterns.Behavioural.Strategy
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Strategy
    name: Strategy
    href: SombraStudios.Shared.Patterns.Behavioural.Strategy.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Strategy
    name: Strategy
    href: SombraStudios.Shared.Patterns.Behavioural.Strategy.html
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute
  href: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.html#SombraStudios_Shared_Patterns_Behavioural_Strategy_IStrategy_Execute
  name: Execute
  nameWithType: IStrategy.Execute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.Execute
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute
  href: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.html#SombraStudios_Shared_Patterns_Behavioural_Strategy_IStrategy_CanExecute
  name: CanExecute
  nameWithType: IStrategy.CanExecute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.CanExecute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute
  href: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.html#SombraStudios_Shared_Patterns_Behavioural_Strategy_IStrategy_TryToExecute
  name: TryToExecute
  nameWithType: IStrategy.TryToExecute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Strategy.IStrategy.TryToExecute
