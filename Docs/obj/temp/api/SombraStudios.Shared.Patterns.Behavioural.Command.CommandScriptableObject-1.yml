### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1
  commentId: T:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1
  id: CommandScriptableObject`1
  parent: SombraStudios.Shared.Patterns.Behavioural.Command
  children:
  - SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.CanExecute(System.Nullable{`0})
  - SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.Execute(System.Nullable{`0})
  - SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.TryExecute(System.Nullable{`0})
  langs:
  - csharp
  - vb
  name: CommandScriptableObject<T>
  nameWithType: CommandScriptableObject<T>
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>
  type: Class
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CommandScriptableObject
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 36
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: Abstract base class for command pattern implementation using ScriptableObject.
  example: []
  syntax:
    content: 'public abstract class CommandScriptableObject<T> : ScriptableObject where T : struct'
    typeParameters:
    - id: T
      description: The type of data that the command operates on.
    content.vb: Public MustInherit Class CommandScriptableObject(Of T As Structure) Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  nameWithType.vb: CommandScriptableObject(Of T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T)
  name.vb: CommandScriptableObject(Of T)
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.TryExecute(System.Nullable{`0})
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.TryExecute(System.Nullable{`0})
  id: TryExecute(System.Nullable{`0})
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1
  langs:
  - csharp
  - vb
  name: TryExecute(T?)
  nameWithType: CommandScriptableObject<T>.TryExecute(T?)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>.TryExecute(T?)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: TryExecute
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 42
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: Tries to execute the command if it can be executed.
  example: []
  syntax:
    content: public void TryExecute(T? data = null)
    parameters:
    - id: data
      type: System.Nullable{{T}}
      description: The data that the command operates on.
    content.vb: Public Sub TryExecute(data As T? = Nothing)
  overload: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.TryExecute*
  nameWithType.vb: CommandScriptableObject(Of T).TryExecute(T?)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T).TryExecute(T?)
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.CanExecute(System.Nullable{`0})
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.CanExecute(System.Nullable{`0})
  id: CanExecute(System.Nullable{`0})
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1
  langs:
  - csharp
  - vb
  name: CanExecute(T?)
  nameWithType: CommandScriptableObject<T>.CanExecute(T?)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>.CanExecute(T?)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CanExecute
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 55
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: Determines whether the command can be executed.
  example: []
  syntax:
    content: protected abstract bool CanExecute(T? data = null)
    parameters:
    - id: data
      type: System.Nullable{{T}}
      description: The data that the command operates on.
    return:
      type: System.Boolean
      description: True if the command can be executed, otherwise false.
    content.vb: Protected MustOverride Function CanExecute(data As T? = Nothing) As Boolean
  overload: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.CanExecute*
  nameWithType.vb: CommandScriptableObject(Of T).CanExecute(T?)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T).CanExecute(T?)
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.Execute(System.Nullable{`0})
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.Execute(System.Nullable{`0})
  id: Execute(System.Nullable{`0})
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1
  langs:
  - csharp
  - vb
  name: Execute(T?)
  nameWithType: CommandScriptableObject<T>.Execute(T?)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>.Execute(T?)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Execute
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 61
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: Executes the command.
  example: []
  syntax:
    content: protected abstract void Execute(T? data = null)
    parameters:
    - id: data
      type: System.Nullable{{T}}
      description: The data that the command operates on.
    content.vb: Protected MustOverride Sub Execute(data As T? = Nothing)
  overload: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.Execute*
  nameWithType.vb: CommandScriptableObject(Of T).Execute(T?)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T).Execute(T?)
references:
- uid: SombraStudios.Shared.Patterns.Behavioural.Command
  commentId: N:SombraStudios.Shared.Patterns.Behavioural.Command
  href: SombraStudios.html
  name: SombraStudios.Shared.Patterns.Behavioural.Command
  nameWithType: SombraStudios.Shared.Patterns.Behavioural.Command
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command
    name: Command
    href: SombraStudios.Shared.Patterns.Behavioural.Command.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command
    name: Command
    href: SombraStudios.Shared.Patterns.Behavioural.Command.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.TryExecute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.TryExecute
  href: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_CommandScriptableObject_1_TryExecute_System_Nullable__0__
  name: TryExecute
  nameWithType: CommandScriptableObject<T>.TryExecute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>.TryExecute
  nameWithType.vb: CommandScriptableObject(Of T).TryExecute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T).TryExecute
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{`0}
  parent: System
  definition: System.Nullable`1
  name: T?
  nameWithType: T?
  fullName: T?
  spec.csharp:
  - name: T
  - name: '?'
  spec.vb:
  - name: T
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.CanExecute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.CanExecute
  href: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_CommandScriptableObject_1_CanExecute_System_Nullable__0__
  name: CanExecute
  nameWithType: CommandScriptableObject<T>.CanExecute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>.CanExecute
  nameWithType.vb: CommandScriptableObject(Of T).CanExecute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T).CanExecute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.Execute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject`1.Execute
  href: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_CommandScriptableObject_1_Execute_System_Nullable__0__
  name: Execute
  nameWithType: CommandScriptableObject<T>.Execute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject<T>.Execute
  nameWithType.vb: CommandScriptableObject(Of T).Execute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandScriptableObject(Of T).Execute
