### YamlMime:ManagedReference
items:
- uid: SombraStudios.Utility.UnityMessagesHandler
  commentId: T:SombraStudios.Utility.UnityMessagesHandler
  id: UnityMessagesHandler
  parent: SombraStudios.Utility
  children:
  - SombraStudios.Utility.UnityMessagesHandler.Awake
  - SombraStudios.Utility.UnityMessagesHandler.FixedUpdate
  - SombraStudios.Utility.UnityMessagesHandler.LateUpdate
  - SombraStudios.Utility.UnityMessagesHandler.OnAnimatorIK
  - SombraStudios.Utility.UnityMessagesHandler.OnAnimatorMove
  - SombraStudios.Utility.UnityMessagesHandler.OnApplicationFocus
  - SombraStudios.Utility.UnityMessagesHandler.OnApplicationPause
  - SombraStudios.Utility.UnityMessagesHandler.OnApplicationQuit
  - SombraStudios.Utility.UnityMessagesHandler.OnAudioFilterRead
  - SombraStudios.Utility.UnityMessagesHandler.OnBecameInvisible
  - SombraStudios.Utility.UnityMessagesHandler.OnBecameVisible
  - SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter
  - SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter2D
  - SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit
  - SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit2D
  - SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay
  - SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay2D
  - SombraStudios.Utility.UnityMessagesHandler.OnConnectedToServer
  - SombraStudios.Utility.UnityMessagesHandler.OnControllerColliderHit
  - SombraStudios.Utility.UnityMessagesHandler.OnDestroy
  - SombraStudios.Utility.UnityMessagesHandler.OnDisable
  - SombraStudios.Utility.UnityMessagesHandler.OnDisconnectedFromServer
  - SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmos
  - SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmosSelected
  - SombraStudios.Utility.UnityMessagesHandler.OnEnable
  - SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnect
  - SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnectToMasterServer
  - SombraStudios.Utility.UnityMessagesHandler.OnGUI
  - SombraStudios.Utility.UnityMessagesHandler.OnJointBreak
  - SombraStudios.Utility.UnityMessagesHandler.OnJointBreak2D
  - SombraStudios.Utility.UnityMessagesHandler.OnMasterServerEvent
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseDown
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseDrag
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseEnter
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseExit
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseOver
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseUp
  - SombraStudios.Utility.UnityMessagesHandler.OnMouseUpAsButton
  - SombraStudios.Utility.UnityMessagesHandler.OnNetworkInstantiate
  - SombraStudios.Utility.UnityMessagesHandler.OnParticleCollision
  - SombraStudios.Utility.UnityMessagesHandler.OnParticleSystemStopped
  - SombraStudios.Utility.UnityMessagesHandler.OnParticleTrigger
  - SombraStudios.Utility.UnityMessagesHandler.OnParticleUpdateJobScheduled
  - SombraStudios.Utility.UnityMessagesHandler.OnPlayerConnected
  - SombraStudios.Utility.UnityMessagesHandler.OnPlayerDisconnected
  - SombraStudios.Utility.UnityMessagesHandler.OnPostRender
  - SombraStudios.Utility.UnityMessagesHandler.OnPreCull
  - SombraStudios.Utility.UnityMessagesHandler.OnPreRender
  - SombraStudios.Utility.UnityMessagesHandler.OnRenderImage
  - SombraStudios.Utility.UnityMessagesHandler.OnRenderObject
  - SombraStudios.Utility.UnityMessagesHandler.OnSerializeNetworkView
  - SombraStudios.Utility.UnityMessagesHandler.OnServerInitialized
  - SombraStudios.Utility.UnityMessagesHandler.OnTransformChildrenChanged
  - SombraStudios.Utility.UnityMessagesHandler.OnTransformParentChanged
  - SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter
  - SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter2D
  - SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit
  - SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit2D
  - SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay
  - SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay2D
  - SombraStudios.Utility.UnityMessagesHandler.OnValidate
  - SombraStudios.Utility.UnityMessagesHandler.OnWillRenderObject
  - SombraStudios.Utility.UnityMessagesHandler.Reset
  - SombraStudios.Utility.UnityMessagesHandler.Start
  - SombraStudios.Utility.UnityMessagesHandler.Update
  langs:
  - csharp
  - vb
  name: UnityMessagesHandler
  nameWithType: UnityMessagesHandler
  fullName: SombraStudios.Utility.UnityMessagesHandler
  type: Class
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: UnityMessagesHandler
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 9
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  summary: >-
    Documentation:

    https://docs.unity3d.com/Manual/ExecutionOrder.html
  example: []
  syntax:
    content: 'public class UnityMessagesHandler : MonoBehaviour'
    content.vb: Public Class UnityMessagesHandler Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - UnityEngine.MonoBehaviour.SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1({T}@)
- uid: SombraStudios.Utility.UnityMessagesHandler.Awake
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.Awake
  id: Awake
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: Awake
  nameWithType: UnityMessagesHandler.Awake
  fullName: SombraStudios.Utility.UnityMessagesHandler.Awake
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Awake
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 13
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Header("Messages")]

      [Tooltip("Awake is called when an enabled script instance is being loaded.")]

      public UnityEvent Awake
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Header("Messages")>

      <Tooltip("Awake is called when an enabled script instance is being loaded.")>

      Public Awake As UnityEvent
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Messages
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Awake is called when an enabled script instance is being loaded.
- uid: SombraStudios.Utility.UnityMessagesHandler.FixedUpdate
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.FixedUpdate
  id: FixedUpdate
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: FixedUpdate
  nameWithType: UnityMessagesHandler.FixedUpdate
  fullName: SombraStudios.Utility.UnityMessagesHandler.FixedUpdate
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: FixedUpdate
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 15
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Frame-rate independent MonoBehaviour.FixedUpdate message for physics calculations.")]

      public UnityEvent FixedUpdate
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Frame-rate independent MonoBehaviour.FixedUpdate message for physics calculations.")>

      Public FixedUpdate As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Frame-rate independent MonoBehaviour.FixedUpdate message for physics calculations.
- uid: SombraStudios.Utility.UnityMessagesHandler.LateUpdate
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.LateUpdate
  id: LateUpdate
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: LateUpdate
  nameWithType: UnityMessagesHandler.LateUpdate
  fullName: SombraStudios.Utility.UnityMessagesHandler.LateUpdate
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: LateUpdate
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 17
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("LateUpdate is called every frame, if the Behaviour is enabled.")]

      public UnityEvent LateUpdate
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("LateUpdate is called every frame, if the Behaviour is enabled.")>

      Public LateUpdate As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: LateUpdate is called every frame, if the Behaviour is enabled.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnAnimatorIK
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnAnimatorIK
  id: OnAnimatorIK
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnAnimatorIK
  nameWithType: UnityMessagesHandler.OnAnimatorIK
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnAnimatorIK
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnAnimatorIK
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 19
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Callback for setting up animation IK (inverse kinematics).")]

      public UnityEvent OnAnimatorIK
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Callback for setting up animation IK (inverse kinematics).")>

      Public OnAnimatorIK As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Callback for setting up animation IK (inverse kinematics).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnAnimatorMove
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnAnimatorMove
  id: OnAnimatorMove
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnAnimatorMove
  nameWithType: UnityMessagesHandler.OnAnimatorMove
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnAnimatorMove
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnAnimatorMove
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 21
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Callback for processing animation movements for modifying root motion.")]

      public UnityEvent OnAnimatorMove
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Callback for processing animation movements for modifying root motion.")>

      Public OnAnimatorMove As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Callback for processing animation movements for modifying root motion.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnApplicationFocus
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnApplicationFocus
  id: OnApplicationFocus
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnApplicationFocus
  nameWithType: UnityMessagesHandler.OnApplicationFocus
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnApplicationFocus
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnApplicationFocus
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 23
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent to all GameObjects when the player gets or loses focus.")]

      public UnityEvent OnApplicationFocus
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent to all GameObjects when the player gets or loses focus.")>

      Public OnApplicationFocus As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent to all GameObjects when the player gets or loses focus.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnApplicationPause
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnApplicationPause
  id: OnApplicationPause
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnApplicationPause
  nameWithType: UnityMessagesHandler.OnApplicationPause
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnApplicationPause
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnApplicationPause
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 25
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent to all GameObjects when the application pauses.")]

      public UnityEvent OnApplicationPause
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent to all GameObjects when the application pauses.")>

      Public OnApplicationPause As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent to all GameObjects when the application pauses.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnApplicationQuit
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnApplicationQuit
  id: OnApplicationQuit
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnApplicationQuit
  nameWithType: UnityMessagesHandler.OnApplicationQuit
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnApplicationQuit
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnApplicationQuit
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 27
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent to all GameObjects before the application quits.")]

      public UnityEvent OnApplicationQuit
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent to all GameObjects before the application quits.")>

      Public OnApplicationQuit As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent to all GameObjects before the application quits.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnAudioFilterRead
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnAudioFilterRead
  id: OnAudioFilterRead
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnAudioFilterRead
  nameWithType: UnityMessagesHandler.OnAudioFilterRead
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnAudioFilterRead
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnAudioFilterRead
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 29
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("If OnAudioFilterRead is implemented, Unity will insert a custom filter into the audio DSP chain.")]

      public UnityEvent OnAudioFilterRead
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("If OnAudioFilterRead is implemented, Unity will insert a custom filter into the audio DSP chain.")>

      Public OnAudioFilterRead As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: If OnAudioFilterRead is implemented, Unity will insert a custom filter into the audio DSP chain.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnBecameInvisible
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnBecameInvisible
  id: OnBecameInvisible
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnBecameInvisible
  nameWithType: UnityMessagesHandler.OnBecameInvisible
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnBecameInvisible
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnBecameInvisible
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 31
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnBecameInvisible is called when the renderer is no longer visible by any camera.")]

      public UnityEvent OnBecameInvisible
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnBecameInvisible is called when the renderer is no longer visible by any camera.")>

      Public OnBecameInvisible As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnBecameInvisible is called when the renderer is no longer visible by any camera.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnBecameVisible
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnBecameVisible
  id: OnBecameVisible
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnBecameVisible
  nameWithType: UnityMessagesHandler.OnBecameVisible
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnBecameVisible
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnBecameVisible
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 33
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnBecameVisible is called when the renderer became visible by any camera.")]

      public UnityEvent OnBecameVisible
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnBecameVisible is called when the renderer became visible by any camera.")>

      Public OnBecameVisible As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnBecameVisible is called when the renderer became visible by any camera.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter
  id: OnCollisionEnter
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnCollisionEnter
  nameWithType: UnityMessagesHandler.OnCollisionEnter
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnCollisionEnter
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 36
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnCollisionEnter is called when this collider/rigidbody has begun touching another rigidbody/collider.")]

      public UnityEvent OnCollisionEnter
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnCollisionEnter is called when this collider/rigidbody has begun touching another rigidbody/collider.")>

      Public OnCollisionEnter As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnCollisionEnter is called when this collider/rigidbody has begun touching another rigidbody/collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter2D
  id: OnCollisionEnter2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnCollisionEnter2D
  nameWithType: UnityMessagesHandler.OnCollisionEnter2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnCollisionEnter2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnCollisionEnter2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 38
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent when an incoming collider makes contact with this object's collider (2D physics only).")]

      public UnityEvent OnCollisionEnter2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent when an incoming collider makes contact with this object's collider (2D physics only).")>

      Public OnCollisionEnter2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent when an incoming collider makes contact with this object's collider (2D physics only).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit
  id: OnCollisionExit
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnCollisionExit
  nameWithType: UnityMessagesHandler.OnCollisionExit
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnCollisionExit
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 41
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnCollisionExit is called when this collider/rigidbody has stopped touching another rigidbody/collider.")]

      public UnityEvent OnCollisionExit
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnCollisionExit is called when this collider/rigidbody has stopped touching another rigidbody/collider.")>

      Public OnCollisionExit As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnCollisionExit is called when this collider/rigidbody has stopped touching another rigidbody/collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit2D
  id: OnCollisionExit2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnCollisionExit2D
  nameWithType: UnityMessagesHandler.OnCollisionExit2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnCollisionExit2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnCollisionExit2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 43
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent when a collider on another object stops touching this object's collider (2D physics only).")]

      public UnityEvent OnCollisionExit2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent when a collider on another object stops touching this object's collider (2D physics only).")>

      Public OnCollisionExit2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent when a collider on another object stops touching this object's collider (2D physics only).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay
  id: OnCollisionStay
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnCollisionStay
  nameWithType: UnityMessagesHandler.OnCollisionStay
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnCollisionStay
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 46
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnCollisionStay is called once per frame for every Collider or Rigidbody that touches another Collider or Rigidbody.")]

      public UnityEvent OnCollisionStay
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnCollisionStay is called once per frame for every Collider or Rigidbody that touches another Collider or Rigidbody.")>

      Public OnCollisionStay As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnCollisionStay is called once per frame for every Collider or Rigidbody that touches another Collider or Rigidbody.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay2D
  id: OnCollisionStay2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnCollisionStay2D
  nameWithType: UnityMessagesHandler.OnCollisionStay2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnCollisionStay2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnCollisionStay2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 49
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent each frame where a collider on another object is touching this object's collider (2D physics only).")]

      public UnityEvent OnCollisionStay2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent each frame where a collider on another object is touching this object's collider (2D physics only).")>

      Public OnCollisionStay2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent each frame where a collider on another object is touching this object's collider (2D physics only).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnConnectedToServer
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnConnectedToServer
  id: OnConnectedToServer
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnConnectedToServer
  nameWithType: UnityMessagesHandler.OnConnectedToServer
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnConnectedToServer
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnConnectedToServer
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 51
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on the client when you have successfully connected to a server.")]

      public UnityEvent OnConnectedToServer
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on the client when you have successfully connected to a server.")>

      Public OnConnectedToServer As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on the client when you have successfully connected to a server.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnControllerColliderHit
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnControllerColliderHit
  id: OnControllerColliderHit
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnControllerColliderHit
  nameWithType: UnityMessagesHandler.OnControllerColliderHit
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnControllerColliderHit
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnControllerColliderHit
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 53
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnControllerColliderHit is called when the controller hits a collider while performing a Move.")]

      public UnityEvent OnControllerColliderHit
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnControllerColliderHit is called when the controller hits a collider while performing a Move.")>

      Public OnControllerColliderHit As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnControllerColliderHit is called when the controller hits a collider while performing a Move.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnDestroy
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnDestroy
  id: OnDestroy
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnDestroy
  nameWithType: UnityMessagesHandler.OnDestroy
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnDestroy
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnDestroy
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 55
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Destroying the attached Behaviour will result in the game or Scene receiving OnDestroy.")]

      public UnityEvent OnDestroy
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Destroying the attached Behaviour will result in the game or Scene receiving OnDestroy.")>

      Public OnDestroy As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Destroying the attached Behaviour will result in the game or Scene receiving OnDestroy.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnDisable
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnDisable
  id: OnDisable
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnDisable
  nameWithType: UnityMessagesHandler.OnDisable
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnDisable
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnDisable
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 57
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("This function is called when the behaviour becomes disabled.")]

      public UnityEvent OnDisable
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("This function is called when the behaviour becomes disabled.")>

      Public OnDisable As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is called when the behaviour becomes disabled.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnDisconnectedFromServer
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnDisconnectedFromServer
  id: OnDisconnectedFromServer
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnDisconnectedFromServer
  nameWithType: UnityMessagesHandler.OnDisconnectedFromServer
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnDisconnectedFromServer
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnDisconnectedFromServer
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 59
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on the client when the connection was lost or you disconnected from the server.")]

      public UnityEvent OnDisconnectedFromServer
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on the client when the connection was lost or you disconnected from the server.")>

      Public OnDisconnectedFromServer As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on the client when the connection was lost or you disconnected from the server.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmos
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmos
  id: OnDrawGizmos
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnDrawGizmos
  nameWithType: UnityMessagesHandler.OnDrawGizmos
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmos
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnDrawGizmos
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 61
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Implement OnDrawGizmos if you want to draw gizmos that are also pickable and always drawn.")]

      public UnityEvent OnDrawGizmos
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Implement OnDrawGizmos if you want to draw gizmos that are also pickable and always drawn.")>

      Public OnDrawGizmos As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Implement OnDrawGizmos if you want to draw gizmos that are also pickable and always drawn.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmosSelected
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmosSelected
  id: OnDrawGizmosSelected
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnDrawGizmosSelected
  nameWithType: UnityMessagesHandler.OnDrawGizmosSelected
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnDrawGizmosSelected
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnDrawGizmosSelected
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 63
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Implement OnDrawGizmosSelected to draw a gizmo if the object is selected.")]

      public UnityEvent OnDrawGizmosSelected
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Implement OnDrawGizmosSelected to draw a gizmo if the object is selected.")>

      Public OnDrawGizmosSelected As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Implement OnDrawGizmosSelected to draw a gizmo if the object is selected.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnEnable
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnEnable
  id: OnEnable
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnEnable
  nameWithType: UnityMessagesHandler.OnEnable
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnEnable
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnEnable
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 65
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("This function is called when the object becomes enabled and active.")]

      public UnityEvent OnEnable
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("This function is called when the object becomes enabled and active.")>

      Public OnEnable As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is called when the object becomes enabled and active.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnect
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnect
  id: OnFailedToConnect
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnFailedToConnect
  nameWithType: UnityMessagesHandler.OnFailedToConnect
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnect
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnFailedToConnect
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 67
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on the client when a connection attempt fails for some reason.")]

      public UnityEvent OnFailedToConnect
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on the client when a connection attempt fails for some reason.")>

      Public OnFailedToConnect As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on the client when a connection attempt fails for some reason.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnectToMasterServer
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnectToMasterServer
  id: OnFailedToConnectToMasterServer
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnFailedToConnectToMasterServer
  nameWithType: UnityMessagesHandler.OnFailedToConnectToMasterServer
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnFailedToConnectToMasterServer
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnFailedToConnectToMasterServer
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 69
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on clients or servers when there is a problem connecting to the MasterServer.")]

      public UnityEvent OnFailedToConnectToMasterServer
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on clients or servers when there is a problem connecting to the MasterServer.")>

      Public OnFailedToConnectToMasterServer As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on clients or servers when there is a problem connecting to the MasterServer.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnGUI
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnGUI
  id: OnGUI
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnGUI
  nameWithType: UnityMessagesHandler.OnGUI
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnGUI
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnGUI
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 71
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnGUI is called for rendering and handling GUI events.")]

      public UnityEvent OnGUI
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnGUI is called for rendering and handling GUI events.")>

      Public OnGUI As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnGUI is called for rendering and handling GUI events.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnJointBreak
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnJointBreak
  id: OnJointBreak
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnJointBreak
  nameWithType: UnityMessagesHandler.OnJointBreak
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnJointBreak
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnJointBreak
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 73
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called when a joint attached to the same game object broke.")]

      public UnityEvent OnJointBreak
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called when a joint attached to the same game object broke.")>

      Public OnJointBreak As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called when a joint attached to the same game object broke.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnJointBreak2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnJointBreak2D
  id: OnJointBreak2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnJointBreak2D
  nameWithType: UnityMessagesHandler.OnJointBreak2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnJointBreak2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnJointBreak2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 75
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called when a Joint2D attached to the same game object breaks.")]

      public UnityEvent OnJointBreak2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called when a Joint2D attached to the same game object breaks.")>

      Public OnJointBreak2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called when a Joint2D attached to the same game object breaks.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMasterServerEvent
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMasterServerEvent
  id: OnMasterServerEvent
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMasterServerEvent
  nameWithType: UnityMessagesHandler.OnMasterServerEvent
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMasterServerEvent
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMasterServerEvent
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 77
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on clients or servers when reporting events from the MasterServer.")]

      public UnityEvent OnMasterServerEvent
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on clients or servers when reporting events from the MasterServer.")>

      Public OnMasterServerEvent As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on clients or servers when reporting events from the MasterServer.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseDown
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseDown
  id: OnMouseDown
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseDown
  nameWithType: UnityMessagesHandler.OnMouseDown
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseDown
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseDown
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 79
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnMouseDown is called when the user has pressed the mouse button while over the Collider.")]

      public UnityEvent OnMouseDown
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnMouseDown is called when the user has pressed the mouse button while over the Collider.")>

      Public OnMouseDown As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnMouseDown is called when the user has pressed the mouse button while over the Collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseDrag
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseDrag
  id: OnMouseDrag
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseDrag
  nameWithType: UnityMessagesHandler.OnMouseDrag
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseDrag
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseDrag
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 81
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnMouseDrag is called when the user has clicked on a Collider and is still holding down the mouse.")]

      public UnityEvent OnMouseDrag
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnMouseDrag is called when the user has clicked on a Collider and is still holding down the mouse.")>

      Public OnMouseDrag As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnMouseDrag is called when the user has clicked on a Collider and is still holding down the mouse.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseEnter
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseEnter
  id: OnMouseEnter
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseEnter
  nameWithType: UnityMessagesHandler.OnMouseEnter
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseEnter
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseEnter
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 83
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called when the mouse enters the Collider.")]

      public UnityEvent OnMouseEnter
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called when the mouse enters the Collider.")>

      Public OnMouseEnter As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called when the mouse enters the Collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseExit
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseExit
  id: OnMouseExit
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseExit
  nameWithType: UnityMessagesHandler.OnMouseExit
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseExit
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseExit
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 85
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called when the mouse is not any longer over the Collider.")]

      public UnityEvent OnMouseExit
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called when the mouse is not any longer over the Collider.")>

      Public OnMouseExit As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called when the mouse is not any longer over the Collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseOver
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseOver
  id: OnMouseOver
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseOver
  nameWithType: UnityMessagesHandler.OnMouseOver
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseOver
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseOver
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 87
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called every frame while the mouse is over the Collider.")]

      public UnityEvent OnMouseOver
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called every frame while the mouse is over the Collider.")>

      Public OnMouseOver As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called every frame while the mouse is over the Collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseUp
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseUp
  id: OnMouseUp
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseUp
  nameWithType: UnityMessagesHandler.OnMouseUp
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseUp
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseUp
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 89
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnMouseUp is called when the user has released the mouse button.")]

      public UnityEvent OnMouseUp
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnMouseUp is called when the user has released the mouse button.")>

      Public OnMouseUp As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnMouseUp is called when the user has released the mouse button.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnMouseUpAsButton
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnMouseUpAsButton
  id: OnMouseUpAsButton
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnMouseUpAsButton
  nameWithType: UnityMessagesHandler.OnMouseUpAsButton
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnMouseUpAsButton
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnMouseUpAsButton
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 92
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnMouseUpAsButton is only called when the mouse is released over the same Collider as it was pressed.")]

      public UnityEvent OnMouseUpAsButton
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnMouseUpAsButton is only called when the mouse is released over the same Collider as it was pressed.")>

      Public OnMouseUpAsButton As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnMouseUpAsButton is only called when the mouse is released over the same Collider as it was pressed.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnNetworkInstantiate
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnNetworkInstantiate
  id: OnNetworkInstantiate
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnNetworkInstantiate
  nameWithType: UnityMessagesHandler.OnNetworkInstantiate
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnNetworkInstantiate
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnNetworkInstantiate
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 94
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on objects which have been network instantiated with Network.Instantiate.")]

      public UnityEvent OnNetworkInstantiate
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on objects which have been network instantiated with Network.Instantiate.")>

      Public OnNetworkInstantiate As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on objects which have been network instantiated with Network.Instantiate.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnParticleCollision
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnParticleCollision
  id: OnParticleCollision
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnParticleCollision
  nameWithType: UnityMessagesHandler.OnParticleCollision
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnParticleCollision
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnParticleCollision
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 96
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnParticleCollision is called when a particle hits a Collider.")]

      public UnityEvent OnParticleCollision
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnParticleCollision is called when a particle hits a Collider.")>

      Public OnParticleCollision As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnParticleCollision is called when a particle hits a Collider.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnParticleSystemStopped
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnParticleSystemStopped
  id: OnParticleSystemStopped
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnParticleSystemStopped
  nameWithType: UnityMessagesHandler.OnParticleSystemStopped
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnParticleSystemStopped
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnParticleSystemStopped
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 100
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnParticleSystemStopped is called when all particles in the system have died, and no new particles will be born.New particles cease to be created either after Stop is called, or when the duration property of a non-looping system has been exceeded.")]

      public UnityEvent OnParticleSystemStopped
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnParticleSystemStopped is called when all particles in the system have died, and no new particles will be born.New particles cease to be created either after Stop is called, or when the duration property of a non-looping system has been exceeded.")>

      Public OnParticleSystemStopped As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnParticleSystemStopped is called when all particles in the system have died, and no new particles will be born.New particles cease to be created either after Stop is called, or when the duration property of a non-looping system has been exceeded.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnParticleTrigger
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnParticleTrigger
  id: OnParticleTrigger
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnParticleTrigger
  nameWithType: UnityMessagesHandler.OnParticleTrigger
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnParticleTrigger
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnParticleTrigger
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 103
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnParticleTrigger is called when any particles in a Particle System meet the conditions in the trigger module.")]

      public UnityEvent OnParticleTrigger
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnParticleTrigger is called when any particles in a Particle System meet the conditions in the trigger module.")>

      Public OnParticleTrigger As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnParticleTrigger is called when any particles in a Particle System meet the conditions in the trigger module.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnParticleUpdateJobScheduled
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnParticleUpdateJobScheduled
  id: OnParticleUpdateJobScheduled
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnParticleUpdateJobScheduled
  nameWithType: UnityMessagesHandler.OnParticleUpdateJobScheduled
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnParticleUpdateJobScheduled
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnParticleUpdateJobScheduled
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 106
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnParticleUpdateJobScheduled is called when a Particle System's built-in update job has been scheduled.")]

      public UnityEvent OnParticleUpdateJobScheduled
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnParticleUpdateJobScheduled is called when a Particle System's built-in update job has been scheduled.")>

      Public OnParticleUpdateJobScheduled As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnParticleUpdateJobScheduled is called when a Particle System's built-in update job has been scheduled.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnPlayerConnected
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnPlayerConnected
  id: OnPlayerConnected
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnPlayerConnected
  nameWithType: UnityMessagesHandler.OnPlayerConnected
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnPlayerConnected
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnPlayerConnected
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 108
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on the server whenever a new player has successfully connected.")]

      public UnityEvent OnPlayerConnected
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on the server whenever a new player has successfully connected.")>

      Public OnPlayerConnected As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on the server whenever a new player has successfully connected.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnPlayerDisconnected
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnPlayerDisconnected
  id: OnPlayerDisconnected
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnPlayerDisconnected
  nameWithType: UnityMessagesHandler.OnPlayerDisconnected
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnPlayerDisconnected
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnPlayerDisconnected
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 110
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on the server whenever a player disconnected from the server.")]

      public UnityEvent OnPlayerDisconnected
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on the server whenever a player disconnected from the server.")>

      Public OnPlayerDisconnected As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on the server whenever a player disconnected from the server.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnPostRender
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnPostRender
  id: OnPostRender
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnPostRender
  nameWithType: UnityMessagesHandler.OnPostRender
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnPostRender
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnPostRender
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 112
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Event function that Unity calls after a Camera renders the scene.")]

      public UnityEvent OnPostRender
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Event function that Unity calls after a Camera renders the scene.")>

      Public OnPostRender As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event function that Unity calls after a Camera renders the scene.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnPreCull
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnPreCull
  id: OnPreCull
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnPreCull
  nameWithType: UnityMessagesHandler.OnPreCull
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnPreCull
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnPreCull
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 114
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Event function that Unity calls before a Camera culls the scene.")]

      public UnityEvent OnPreCull
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Event function that Unity calls before a Camera culls the scene.")>

      Public OnPreCull As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event function that Unity calls before a Camera culls the scene.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnPreRender
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnPreRender
  id: OnPreRender
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnPreRender
  nameWithType: UnityMessagesHandler.OnPreRender
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnPreRender
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnPreRender
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 116
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Event function that Unity calls before a Camera renders the scene.")]

      public UnityEvent OnPreRender
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Event function that Unity calls before a Camera renders the scene.")>

      Public OnPreRender As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event function that Unity calls before a Camera renders the scene.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnRenderImage
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnRenderImage
  id: OnRenderImage
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnRenderImage
  nameWithType: UnityMessagesHandler.OnRenderImage
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnRenderImage
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnRenderImage
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 119
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Event function that Unity calls after a Camera has finished rendering, that allows you to modify the Camera's final image.")]

      public UnityEvent OnRenderImage
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Event function that Unity calls after a Camera has finished rendering, that allows you to modify the Camera's final image.")>

      Public OnRenderImage As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event function that Unity calls after a Camera has finished rendering, that allows you to modify the Camera's final image.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnRenderObject
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnRenderObject
  id: OnRenderObject
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnRenderObject
  nameWithType: UnityMessagesHandler.OnRenderObject
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnRenderObject
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnRenderObject
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 121
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnRenderObject is called after camera has rendered the Scene.")]

      public UnityEvent OnRenderObject
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnRenderObject is called after camera has rendered the Scene.")>

      Public OnRenderObject As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnRenderObject is called after camera has rendered the Scene.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnSerializeNetworkView
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnSerializeNetworkView
  id: OnSerializeNetworkView
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnSerializeNetworkView
  nameWithType: UnityMessagesHandler.OnSerializeNetworkView
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnSerializeNetworkView
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnSerializeNetworkView
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 123
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Used to customize synchronization of variables in a script watched by a network view.")]

      public UnityEvent OnSerializeNetworkView
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Used to customize synchronization of variables in a script watched by a network view.")>

      Public OnSerializeNetworkView As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used to customize synchronization of variables in a script watched by a network view.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnServerInitialized
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnServerInitialized
  id: OnServerInitialized
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnServerInitialized
  nameWithType: UnityMessagesHandler.OnServerInitialized
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnServerInitialized
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnServerInitialized
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 125
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Called on the server whenever a Network.InitializeServer was invoked and has completed.")]

      public UnityEvent OnServerInitialized
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Called on the server whenever a Network.InitializeServer was invoked and has completed.")>

      Public OnServerInitialized As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Called on the server whenever a Network.InitializeServer was invoked and has completed.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTransformChildrenChanged
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTransformChildrenChanged
  id: OnTransformChildrenChanged
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTransformChildrenChanged
  nameWithType: UnityMessagesHandler.OnTransformChildrenChanged
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTransformChildrenChanged
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTransformChildrenChanged
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 127
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("This function is called when the list of children of the transform of the GameObject has changed.")]

      public UnityEvent OnTransformChildrenChanged
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("This function is called when the list of children of the transform of the GameObject has changed.")>

      Public OnTransformChildrenChanged As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is called when the list of children of the transform of the GameObject has changed.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTransformParentChanged
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTransformParentChanged
  id: OnTransformParentChanged
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTransformParentChanged
  nameWithType: UnityMessagesHandler.OnTransformParentChanged
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTransformParentChanged
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTransformParentChanged
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 130
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("This function is called when a direct or indirect parent of the transform of the GameObject has changed.")]

      public UnityEvent OnTransformParentChanged
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("This function is called when a direct or indirect parent of the transform of the GameObject has changed.")>

      Public OnTransformParentChanged As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is called when a direct or indirect parent of the transform of the GameObject has changed.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter
  id: OnTriggerEnter
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTriggerEnter
  nameWithType: UnityMessagesHandler.OnTriggerEnter
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTriggerEnter
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 132
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("When a GameObject collides with another GameObject, Unity calls OnTriggerEnter.")]

      public UnityEvent OnTriggerEnter
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("When a GameObject collides with another GameObject, Unity calls OnTriggerEnter.")>

      Public OnTriggerEnter As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: When a GameObject collides with another GameObject, Unity calls OnTriggerEnter.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter2D
  id: OnTriggerEnter2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTriggerEnter2D
  nameWithType: UnityMessagesHandler.OnTriggerEnter2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTriggerEnter2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTriggerEnter2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 134
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent when another object enters a trigger collider attached to this object (2D physics only).")]

      public UnityEvent OnTriggerEnter2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent when another object enters a trigger collider attached to this object (2D physics only).")>

      Public OnTriggerEnter2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent when another object enters a trigger collider attached to this object (2D physics only).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit
  id: OnTriggerExit
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTriggerExit
  nameWithType: UnityMessagesHandler.OnTriggerExit
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTriggerExit
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 136
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnTriggerExit is called when the Collider other has stopped touching the trigger.")]

      public UnityEvent OnTriggerExit
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnTriggerExit is called when the Collider other has stopped touching the trigger.")>

      Public OnTriggerExit As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnTriggerExit is called when the Collider other has stopped touching the trigger.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit2D
  id: OnTriggerExit2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTriggerExit2D
  nameWithType: UnityMessagesHandler.OnTriggerExit2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTriggerExit2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTriggerExit2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 138
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent when another object leaves a trigger collider attached to this object (2D physics only).")]

      public UnityEvent OnTriggerExit2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent when another object leaves a trigger collider attached to this object (2D physics only).")>

      Public OnTriggerExit2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent when another object leaves a trigger collider attached to this object (2D physics only).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay
  id: OnTriggerStay
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTriggerStay
  nameWithType: UnityMessagesHandler.OnTriggerStay
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTriggerStay
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 141
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnTriggerStay is called once per physics update for every Collider other that is touching the trigger.")]

      public UnityEvent OnTriggerStay
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnTriggerStay is called once per physics update for every Collider other that is touching the trigger.")>

      Public OnTriggerStay As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnTriggerStay is called once per physics update for every Collider other that is touching the trigger.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay2D
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay2D
  id: OnTriggerStay2D
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnTriggerStay2D
  nameWithType: UnityMessagesHandler.OnTriggerStay2D
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnTriggerStay2D
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnTriggerStay2D
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 144
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Sent each frame where another object is within a trigger collider attached to this object (2D physics only).")]

      public UnityEvent OnTriggerStay2D
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Sent each frame where another object is within a trigger collider attached to this object (2D physics only).")>

      Public OnTriggerStay2D As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sent each frame where another object is within a trigger collider attached to this object (2D physics only).
- uid: SombraStudios.Utility.UnityMessagesHandler.OnValidate
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnValidate
  id: OnValidate
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnValidate
  nameWithType: UnityMessagesHandler.OnValidate
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnValidate
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnValidate
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 147
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Editor-only function that Unity calls when the script is loaded or a value changes in the Inspector.")]

      public UnityEvent OnValidate
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Editor-only function that Unity calls when the script is loaded or a value changes in the Inspector.")>

      Public OnValidate As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Editor-only function that Unity calls when the script is loaded or a value changes in the Inspector.
- uid: SombraStudios.Utility.UnityMessagesHandler.OnWillRenderObject
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.OnWillRenderObject
  id: OnWillRenderObject
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: OnWillRenderObject
  nameWithType: UnityMessagesHandler.OnWillRenderObject
  fullName: SombraStudios.Utility.UnityMessagesHandler.OnWillRenderObject
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: OnWillRenderObject
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 149
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("OnWillRenderObject is called for each camera if the object is visible and not a UI element.")]

      public UnityEvent OnWillRenderObject
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("OnWillRenderObject is called for each camera if the object is visible and not a UI element.")>

      Public OnWillRenderObject As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: OnWillRenderObject is called for each camera if the object is visible and not a UI element.
- uid: SombraStudios.Utility.UnityMessagesHandler.Reset
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.Reset
  id: Reset
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: Reset
  nameWithType: UnityMessagesHandler.Reset
  fullName: SombraStudios.Utility.UnityMessagesHandler.Reset
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Reset
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 151
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Reset to default values.")]

      public UnityEvent Reset
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Reset to default values.")>

      Public Reset As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Reset to default values.
- uid: SombraStudios.Utility.UnityMessagesHandler.Start
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.Start
  id: Start
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: UnityMessagesHandler.Start
  fullName: SombraStudios.Utility.UnityMessagesHandler.Start
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Start
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 154
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Start is called on the frame when a script is enabled just before any of the Update methods are called the first time.")]

      public UnityEvent Start
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Start is called on the frame when a script is enabled just before any of the Update methods are called the first time.")>

      Public Start As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Start is called on the frame when a script is enabled just before any of the Update methods are called the first time.
- uid: SombraStudios.Utility.UnityMessagesHandler.Update
  commentId: F:SombraStudios.Utility.UnityMessagesHandler.Update
  id: Update
  parent: SombraStudios.Utility.UnityMessagesHandler
  langs:
  - csharp
  - vb
  name: Update
  nameWithType: UnityMessagesHandler.Update
  fullName: SombraStudios.Utility.UnityMessagesHandler.Update
  type: Field
  source:
    remote:
      path: Utility/UnityMessagesHandler.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Update
    path: ../Assets/Sombra Studios/Shared/Utility/UnityMessagesHandler.cs
    startLine: 156
  assemblies:
  - SombraStudios.Shared.Utility
  namespace: SombraStudios.Utility
  syntax:
    content: >-
      [Tooltip("Update is called every frame, if the MonoBehaviour is enabled.")]

      public UnityEvent Update
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: >-
      <Tooltip("Update is called every frame, if the MonoBehaviour is enabled.")>

      Public Update As UnityEvent
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Update is called every frame, if the MonoBehaviour is enabled.
references:
- uid: SombraStudios.Utility
  commentId: N:SombraStudios.Utility
  href: SombraStudios.html
  name: SombraStudios.Utility
  nameWithType: SombraStudios.Utility
  fullName: SombraStudios.Utility
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Utility
    name: Utility
    href: SombraStudios.Utility.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Utility
    name: Utility
    href: SombraStudios.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: UnityEngine.MonoBehaviour.SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1({T}@)
  commentId: M:SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  parent: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  definition: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  name: SafeInit<T>(MonoBehaviour, ref T)
  nameWithType: MonoBehaviourExtensions.SafeInit<T>(MonoBehaviour, ref T)
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit<T>(UnityEngine.MonoBehaviour, ref T)
  nameWithType.vb: MonoBehaviourExtensions.SafeInit(Of T)(MonoBehaviour, T)
  fullName.vb: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit(Of T)(UnityEngine.MonoBehaviour, T)
  name.vb: SafeInit(Of T)(MonoBehaviour, T)
  spec.csharp:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  commentId: M:SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  isExternal: true
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  name: SafeInit<T>(MonoBehaviour, ref T)
  nameWithType: MonoBehaviourExtensions.SafeInit<T>(MonoBehaviour, ref T)
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit<T>(UnityEngine.MonoBehaviour, ref T)
  nameWithType.vb: MonoBehaviourExtensions.SafeInit(Of T)(MonoBehaviour, T)
  fullName.vb: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit(Of T)(UnityEngine.MonoBehaviour, T)
  name.vb: SafeInit(Of T)(MonoBehaviour, T)
  spec.csharp:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  commentId: T:SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  parent: SombraStudios.Shared.Extensions
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html
  name: MonoBehaviourExtensions
  nameWithType: MonoBehaviourExtensions
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
- uid: SombraStudios.Shared.Extensions
  commentId: N:SombraStudios.Shared.Extensions
  href: SombraStudios.html
  name: SombraStudios.Shared.Extensions
  nameWithType: SombraStudios.Shared.Extensions
  fullName: SombraStudios.Shared.Extensions
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Extensions
    name: Extensions
    href: SombraStudios.Shared.Extensions.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Extensions
    name: Extensions
    href: SombraStudios.Shared.Extensions.html
- uid: UnityEngine.Events.UnityEvent
  commentId: T:UnityEngine.Events.UnityEvent
  parent: UnityEngine.Events
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEngine.Events.UnityEvent
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
