### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  commentId: T:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  id: PhysicsEventHandlerBase`1
  parent: SombraStudios.Shared.Physics.Events
  children:
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.AddInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnEnter
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnExit
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnStay
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsActive
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsCollisionEventType(SombraStudios.Shared.Physics.Events.PhysicInteractionEventType)
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.LastInteraction
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveAllInteractionListeners
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._eventType
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._isActive
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._lastInteraction
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._layerMask
  - SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._requiredTag
  langs:
  - csharp
  - vb
  name: PhysicsEventHandlerBase<T>
  nameWithType: PhysicsEventHandlerBase<T>
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>
  type: Class
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: PhysicsEventHandlerBase
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 10
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Base class for handling physics events.
  example: []
  syntax:
    content: 'public abstract class PhysicsEventHandlerBase<T> : MonoBehaviour'
    typeParameters:
    - id: T
      description: The type of the component that will trigger the events.
    content.vb: Public MustInherit Class PhysicsEventHandlerBase(Of T) Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - SombraStudios.Shared.Physics.Events.CollisionEventHandlerBase`1
  - SombraStudios.Shared.Physics.Events.TriggerEventHandlerBase`1
  extensionMethods:
  - UnityEngine.MonoBehaviour.SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1({T}@)
  nameWithType.vb: PhysicsEventHandlerBase(Of T)
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T)
  name.vb: PhysicsEventHandlerBase(Of T)
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._layerMask
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._layerMask
  id: _layerMask
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: _layerMask
  nameWithType: PhysicsEventHandlerBase<T>._layerMask
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>._layerMask
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: _layerMask
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 20
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  syntax:
    content: >-
      [Header("Base Settings")]

      [Tooltip("The LayerMask used to filter the interaction that will trigger the events.Only the interaction with objects whose layer is included in this LayerMask will trigger the events.")]

      [SerializeField]

      protected LayerMask _layerMask
    return:
      type: UnityEngine.LayerMask
    content.vb: >-
      <Header("Base Settings")>

      <Tooltip("The LayerMask used to filter the interaction that will trigger the events.Only the interaction with objects whose layer is included in this LayerMask will trigger the events.")>

      <SerializeField>

      Protected _layerMask As LayerMask
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Base Settings
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The LayerMask used to filter the interaction that will trigger the events.Only the interaction with objects whose layer is included in this LayerMask will trigger the events.
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: PhysicsEventHandlerBase(Of T)._layerMask
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T)._layerMask
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._requiredTag
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._requiredTag
  id: _requiredTag
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: _requiredTag
  nameWithType: PhysicsEventHandlerBase<T>._requiredTag
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>._requiredTag
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: _requiredTag
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 26
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: If set, this interaction will only fire if the other gameobject has this tag.
  example: []
  syntax:
    content: >-
      [Tooltip("If set, this interaction will only fire if the other gameobject has this tag.")]

      [SerializeField]

      protected string _requiredTag
    return:
      type: System.String
    content.vb: >-
      <Tooltip("If set, this interaction will only fire if the other gameobject has this tag.")>

      <SerializeField>

      Protected _requiredTag As String
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: If set, this interaction will only fire if the other gameobject has this tag.
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: PhysicsEventHandlerBase(Of T)._requiredTag
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T)._requiredTag
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._eventType
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._eventType
  id: _eventType
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: _eventType
  nameWithType: PhysicsEventHandlerBase<T>._eventType
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>._eventType
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: _eventType
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 31
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Type of interaction event to handle (Enter, Stay, Exit).
  example: []
  syntax:
    content: >-
      [Tooltip("Type of interaction event to handle (Enter, Stay, Exit).")]

      [SerializeField]

      protected PhysicInteractionEventType _eventType
    return:
      type: SombraStudios.Shared.Physics.Events.PhysicInteractionEventType
    content.vb: >-
      <Tooltip("Type of interaction event to handle (Enter, Stay, Exit).")>

      <SerializeField>

      Protected _eventType As PhysicInteractionEventType
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Type of interaction event to handle (Enter, Stay, Exit).
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: PhysicsEventHandlerBase(Of T)._eventType
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T)._eventType
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnEnter
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnEnter
  id: InteractionOnEnter
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: InteractionOnEnter
  nameWithType: PhysicsEventHandlerBase<T>.InteractionOnEnter
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.InteractionOnEnter
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: InteractionOnEnter
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 38
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  syntax:
    content: >-
      [Header("Events")]

      [Tooltip("Event triggered when interaction is met on enter.")]

      public UnityEvent<T> InteractionOnEnter
    return:
      type: UnityEngine.Events.UnityEvent{{T}}
    content.vb: >-
      <Header("Events")>

      <Tooltip("Event triggered when interaction is met on enter.")>

      Public InteractionOnEnter As UnityEvent(Of T)
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Events
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event triggered when interaction is met on enter.
  nameWithType.vb: PhysicsEventHandlerBase(Of T).InteractionOnEnter
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).InteractionOnEnter
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnStay
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnStay
  id: InteractionOnStay
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: InteractionOnStay
  nameWithType: PhysicsEventHandlerBase<T>.InteractionOnStay
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.InteractionOnStay
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: InteractionOnStay
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 43
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Event triggered when interaction is met on stay.
  example: []
  syntax:
    content: >-
      [Tooltip("Event triggered when interaction is met on stay.")]

      public UnityEvent<T> InteractionOnStay
    return:
      type: UnityEngine.Events.UnityEvent{{T}}
    content.vb: >-
      <Tooltip("Event triggered when interaction is met on stay.")>

      Public InteractionOnStay As UnityEvent(Of T)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event triggered when interaction is met on stay.
  nameWithType.vb: PhysicsEventHandlerBase(Of T).InteractionOnStay
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).InteractionOnStay
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnExit
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.InteractionOnExit
  id: InteractionOnExit
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: InteractionOnExit
  nameWithType: PhysicsEventHandlerBase<T>.InteractionOnExit
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.InteractionOnExit
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: InteractionOnExit
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 48
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Event triggered when interaction is met on exit.
  example: []
  syntax:
    content: >-
      [Tooltip("Event triggered when interaction is met on exit.")]

      public UnityEvent<T> InteractionOnExit
    return:
      type: UnityEngine.Events.UnityEvent{{T}}
    content.vb: >-
      <Tooltip("Event triggered when interaction is met on exit.")>

      Public InteractionOnExit As UnityEvent(Of T)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Event triggered when interaction is met on exit.
  nameWithType.vb: PhysicsEventHandlerBase(Of T).InteractionOnExit
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).InteractionOnExit
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._isActive
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._isActive
  id: _isActive
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: _isActive
  nameWithType: PhysicsEventHandlerBase<T>._isActive
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>._isActive
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: _isActive
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 55
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  syntax:
    content: >-
      [Header("Base Debug")]

      [Tooltip("Wheter the component is calculating physics interactions or not.")]

      [SerializeField]

      protected bool _isActive
    return:
      type: System.Boolean
    content.vb: >-
      <Header("Base Debug")>

      <Tooltip("Wheter the component is calculating physics interactions or not.")>

      <SerializeField>

      Protected _isActive As Boolean
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Base Debug
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wheter the component is calculating physics interactions or not.
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: PhysicsEventHandlerBase(Of T)._isActive
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T)._isActive
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._lastInteraction
  commentId: F:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1._lastInteraction
  id: _lastInteraction
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: _lastInteraction
  nameWithType: PhysicsEventHandlerBase<T>._lastInteraction
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>._lastInteraction
  type: Field
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: _lastInteraction
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 60
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: The Transform of the last object that interact with this one.
  example: []
  syntax:
    content: >-
      [Tooltip("The Transform of the last object that interact with this one.")]

      [SerializeField]

      protected Transform _lastInteraction
    return:
      type: UnityEngine.Transform
    content.vb: >-
      <Tooltip("The Transform of the last object that interact with this one.")>

      <SerializeField>

      Protected _lastInteraction As Transform
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The Transform of the last object that interact with this one.
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: PhysicsEventHandlerBase(Of T)._lastInteraction
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T)._lastInteraction
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsActive
  commentId: P:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsActive
  id: IsActive
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: PhysicsEventHandlerBase<T>.IsActive
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.IsActive
  type: Property
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: IsActive
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 62
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsActive*
  nameWithType.vb: PhysicsEventHandlerBase(Of T).IsActive
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).IsActive
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.LastInteraction
  commentId: P:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.LastInteraction
  id: LastInteraction
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: LastInteraction
  nameWithType: PhysicsEventHandlerBase<T>.LastInteraction
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.LastInteraction
  type: Property
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: LastInteraction
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 63
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  syntax:
    content: public Transform LastInteraction { get; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Public ReadOnly Property LastInteraction As Transform
  overload: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.LastInteraction*
  nameWithType.vb: PhysicsEventHandlerBase(Of T).LastInteraction
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).LastInteraction
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.AddInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  commentId: M:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.AddInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  id: AddInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: AddInteractionListeners(UnityAction<T>, UnityAction<T>, UnityAction<T>)
  nameWithType: PhysicsEventHandlerBase<T>.AddInteractionListeners(UnityAction<T>, UnityAction<T>, UnityAction<T>)
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.AddInteractionListeners(UnityEngine.Events.UnityAction<T>, UnityEngine.Events.UnityAction<T>, UnityEngine.Events.UnityAction<T>)
  type: Method
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: AddInteractionListeners
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 73
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Adds interaction listeners to the corresponding UnityEvents.
  example: []
  syntax:
    content: public void AddInteractionListeners(UnityAction<T> onEnter, UnityAction<T> onStay, UnityAction<T> onExit)
    parameters:
    - id: onEnter
      type: UnityEngine.Events.UnityAction{{T}}
      description: Action to be performed on interaction enter event.
    - id: onStay
      type: UnityEngine.Events.UnityAction{{T}}
      description: Action to be performed on interaction stay event.
    - id: onExit
      type: UnityEngine.Events.UnityAction{{T}}
      description: Action to be performed on interaction exit event.
    content.vb: Public Sub AddInteractionListeners(onEnter As UnityAction(Of T), onStay As UnityAction(Of T), onExit As UnityAction(Of T))
  overload: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.AddInteractionListeners*
  nameWithType.vb: PhysicsEventHandlerBase(Of T).AddInteractionListeners(UnityAction(Of T), UnityAction(Of T), UnityAction(Of T))
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).AddInteractionListeners(UnityEngine.Events.UnityAction(Of T), UnityEngine.Events.UnityAction(Of T), UnityEngine.Events.UnityAction(Of T))
  name.vb: AddInteractionListeners(UnityAction(Of T), UnityAction(Of T), UnityAction(Of T))
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  commentId: M:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  id: RemoveInteractionListeners(UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0},UnityEngine.Events.UnityAction{`0})
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: RemoveInteractionListeners(UnityAction<T>, UnityAction<T>, UnityAction<T>)
  nameWithType: PhysicsEventHandlerBase<T>.RemoveInteractionListeners(UnityAction<T>, UnityAction<T>, UnityAction<T>)
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.RemoveInteractionListeners(UnityEngine.Events.UnityAction<T>, UnityEngine.Events.UnityAction<T>, UnityEngine.Events.UnityAction<T>)
  type: Method
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: RemoveInteractionListeners
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 87
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Removes interaction listeners from the corresponding UnityEvents.
  example: []
  syntax:
    content: public void RemoveInteractionListeners(UnityAction<T> onEnter, UnityAction<T> onStay, UnityAction<T> onExit)
    parameters:
    - id: onEnter
      type: UnityEngine.Events.UnityAction{{T}}
      description: Action to be removed from interaction enter event.
    - id: onStay
      type: UnityEngine.Events.UnityAction{{T}}
      description: Action to be removed from interaction stay event.
    - id: onExit
      type: UnityEngine.Events.UnityAction{{T}}
      description: Action to be removed from interaction exit event.
    content.vb: Public Sub RemoveInteractionListeners(onEnter As UnityAction(Of T), onStay As UnityAction(Of T), onExit As UnityAction(Of T))
  overload: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveInteractionListeners*
  nameWithType.vb: PhysicsEventHandlerBase(Of T).RemoveInteractionListeners(UnityAction(Of T), UnityAction(Of T), UnityAction(Of T))
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).RemoveInteractionListeners(UnityEngine.Events.UnityAction(Of T), UnityEngine.Events.UnityAction(Of T), UnityEngine.Events.UnityAction(Of T))
  name.vb: RemoveInteractionListeners(UnityAction(Of T), UnityAction(Of T), UnityAction(Of T))
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveAllInteractionListeners
  commentId: M:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveAllInteractionListeners
  id: RemoveAllInteractionListeners
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: RemoveAllInteractionListeners()
  nameWithType: PhysicsEventHandlerBase<T>.RemoveAllInteractionListeners()
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.RemoveAllInteractionListeners()
  type: Method
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: RemoveAllInteractionListeners
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 98
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Clears all interaction listeners from the UnityEvents.
  example: []
  syntax:
    content: public void RemoveAllInteractionListeners()
    content.vb: Public Sub RemoveAllInteractionListeners()
  overload: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveAllInteractionListeners*
  nameWithType.vb: PhysicsEventHandlerBase(Of T).RemoveAllInteractionListeners()
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).RemoveAllInteractionListeners()
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsCollisionEventType(SombraStudios.Shared.Physics.Events.PhysicInteractionEventType)
  commentId: M:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsCollisionEventType(SombraStudios.Shared.Physics.Events.PhysicInteractionEventType)
  id: IsCollisionEventType(SombraStudios.Shared.Physics.Events.PhysicInteractionEventType)
  parent: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1
  langs:
  - csharp
  - vb
  name: IsCollisionEventType(PhysicInteractionEventType)
  nameWithType: PhysicsEventHandlerBase<T>.IsCollisionEventType(PhysicInteractionEventType)
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.IsCollisionEventType(SombraStudios.Shared.Physics.Events.PhysicInteractionEventType)
  type: Method
  source:
    remote:
      path: Physics/Events/PhysicsEventHandlerBase.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: IsCollisionEventType
    path: ../Physics/Events/PhysicsEventHandlerBase.cs
    startLine: 113
  assemblies:
  - SombraStudios.Shared.Physics
  namespace: SombraStudios.Shared.Physics.Events
  summary: Checks if the specified interaction event type should be processed.
  example: []
  syntax:
    content: protected bool IsCollisionEventType(PhysicInteractionEventType interactionEventType)
    parameters:
    - id: interactionEventType
      type: SombraStudios.Shared.Physics.Events.PhysicInteractionEventType
      description: The interaction event type to check.
    return:
      type: System.Boolean
      description: True if the event type should be processed, false otherwise.
    content.vb: Protected Function IsCollisionEventType(interactionEventType As PhysicInteractionEventType) As Boolean
  overload: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsCollisionEventType*
  nameWithType.vb: PhysicsEventHandlerBase(Of T).IsCollisionEventType(PhysicInteractionEventType)
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).IsCollisionEventType(SombraStudios.Shared.Physics.Events.PhysicInteractionEventType)
references:
- uid: SombraStudios.Shared.Physics.Events
  commentId: N:SombraStudios.Shared.Physics.Events
  href: SombraStudios.html
  name: SombraStudios.Shared.Physics.Events
  nameWithType: SombraStudios.Shared.Physics.Events
  fullName: SombraStudios.Shared.Physics.Events
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Physics
    name: Physics
    href: SombraStudios.Shared.Physics.html
  - name: .
  - uid: SombraStudios.Shared.Physics.Events
    name: Events
    href: SombraStudios.Shared.Physics.Events.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Physics
    name: Physics
    href: SombraStudios.Shared.Physics.html
  - name: .
  - uid: SombraStudios.Shared.Physics.Events
    name: Events
    href: SombraStudios.Shared.Physics.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: UnityEngine.MonoBehaviour.SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1({T}@)
  commentId: M:SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  parent: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  definition: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  name: SafeInit<T>(MonoBehaviour, ref T)
  nameWithType: MonoBehaviourExtensions.SafeInit<T>(MonoBehaviour, ref T)
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit<T>(UnityEngine.MonoBehaviour, ref T)
  nameWithType.vb: MonoBehaviourExtensions.SafeInit(Of T)(MonoBehaviour, T)
  fullName.vb: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit(Of T)(UnityEngine.MonoBehaviour, T)
  name.vb: SafeInit(Of T)(MonoBehaviour, T)
  spec.csharp:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  commentId: M:SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  isExternal: true
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  name: SafeInit<T>(MonoBehaviour, ref T)
  nameWithType: MonoBehaviourExtensions.SafeInit<T>(MonoBehaviour, ref T)
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit<T>(UnityEngine.MonoBehaviour, ref T)
  nameWithType.vb: MonoBehaviourExtensions.SafeInit(Of T)(MonoBehaviour, T)
  fullName.vb: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit(Of T)(UnityEngine.MonoBehaviour, T)
  name.vb: SafeInit(Of T)(MonoBehaviour, T)
  spec.csharp:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  commentId: T:SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  parent: SombraStudios.Shared.Extensions
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html
  name: MonoBehaviourExtensions
  nameWithType: MonoBehaviourExtensions
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
- uid: SombraStudios.Shared.Extensions
  commentId: N:SombraStudios.Shared.Extensions
  href: SombraStudios.html
  name: SombraStudios.Shared.Extensions
  nameWithType: SombraStudios.Shared.Extensions
  fullName: SombraStudios.Shared.Extensions
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Extensions
    name: Extensions
    href: SombraStudios.Shared.Extensions.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Extensions
    name: Extensions
    href: SombraStudios.Shared.Extensions.html
- uid: UnityEngine.LayerMask
  commentId: T:UnityEngine.LayerMask
  parent: UnityEngine
  isExternal: true
  name: LayerMask
  nameWithType: LayerMask
  fullName: UnityEngine.LayerMask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SombraStudios.Shared.Physics.Events.PhysicInteractionEventType
  commentId: T:SombraStudios.Shared.Physics.Events.PhysicInteractionEventType
  parent: SombraStudios.Shared.Physics.Events
  href: SombraStudios.Shared.Physics.Events.PhysicInteractionEventType.html
  name: PhysicInteractionEventType
  nameWithType: PhysicInteractionEventType
  fullName: SombraStudios.Shared.Physics.Events.PhysicInteractionEventType
- uid: UnityEngine.Events.UnityEvent{{T}}
  commentId: T:UnityEngine.Events.UnityEvent{`1}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<T>
  nameWithType: UnityEvent<T>
  fullName: UnityEngine.Events.UnityEvent<T>
  nameWithType.vb: UnityEvent(Of T)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T)
  name.vb: UnityEvent(Of T)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsActive*
  commentId: Overload:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsActive
  href: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase-1.html#SombraStudios_Shared_Physics_Events_PhysicsEventHandlerBase_1_IsActive
  name: IsActive
  nameWithType: PhysicsEventHandlerBase<T>.IsActive
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.IsActive
  nameWithType.vb: PhysicsEventHandlerBase(Of T).IsActive
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).IsActive
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.LastInteraction*
  commentId: Overload:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.LastInteraction
  href: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase-1.html#SombraStudios_Shared_Physics_Events_PhysicsEventHandlerBase_1_LastInteraction
  name: LastInteraction
  nameWithType: PhysicsEventHandlerBase<T>.LastInteraction
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.LastInteraction
  nameWithType.vb: PhysicsEventHandlerBase(Of T).LastInteraction
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).LastInteraction
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.AddInteractionListeners*
  commentId: Overload:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.AddInteractionListeners
  href: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase-1.html#SombraStudios_Shared_Physics_Events_PhysicsEventHandlerBase_1_AddInteractionListeners_UnityEngine_Events_UnityAction__0__UnityEngine_Events_UnityAction__0__UnityEngine_Events_UnityAction__0__
  name: AddInteractionListeners
  nameWithType: PhysicsEventHandlerBase<T>.AddInteractionListeners
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.AddInteractionListeners
  nameWithType.vb: PhysicsEventHandlerBase(Of T).AddInteractionListeners
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).AddInteractionListeners
- uid: UnityEngine.Events.UnityAction{{T}}
  commentId: T:UnityEngine.Events.UnityAction{`0}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<T>
  nameWithType: UnityAction<T>
  fullName: UnityEngine.Events.UnityAction<T>
  nameWithType.vb: UnityAction(Of T)
  fullName.vb: UnityEngine.Events.UnityAction(Of T)
  name.vb: UnityAction(Of T)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.Events.UnityAction`1
  commentId: T:UnityEngine.Events.UnityAction`1
  isExternal: true
  name: UnityAction<T0>
  nameWithType: UnityAction<T0>
  fullName: UnityEngine.Events.UnityAction<T0>
  nameWithType.vb: UnityAction(Of T0)
  fullName.vb: UnityEngine.Events.UnityAction(Of T0)
  name.vb: UnityAction(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveInteractionListeners*
  commentId: Overload:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveInteractionListeners
  href: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase-1.html#SombraStudios_Shared_Physics_Events_PhysicsEventHandlerBase_1_RemoveInteractionListeners_UnityEngine_Events_UnityAction__0__UnityEngine_Events_UnityAction__0__UnityEngine_Events_UnityAction__0__
  name: RemoveInteractionListeners
  nameWithType: PhysicsEventHandlerBase<T>.RemoveInteractionListeners
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.RemoveInteractionListeners
  nameWithType.vb: PhysicsEventHandlerBase(Of T).RemoveInteractionListeners
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).RemoveInteractionListeners
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveAllInteractionListeners*
  commentId: Overload:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.RemoveAllInteractionListeners
  href: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase-1.html#SombraStudios_Shared_Physics_Events_PhysicsEventHandlerBase_1_RemoveAllInteractionListeners
  name: RemoveAllInteractionListeners
  nameWithType: PhysicsEventHandlerBase<T>.RemoveAllInteractionListeners
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.RemoveAllInteractionListeners
  nameWithType.vb: PhysicsEventHandlerBase(Of T).RemoveAllInteractionListeners
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).RemoveAllInteractionListeners
- uid: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsCollisionEventType*
  commentId: Overload:SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase`1.IsCollisionEventType
  href: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase-1.html#SombraStudios_Shared_Physics_Events_PhysicsEventHandlerBase_1_IsCollisionEventType_SombraStudios_Shared_Physics_Events_PhysicInteractionEventType_
  name: IsCollisionEventType
  nameWithType: PhysicsEventHandlerBase<T>.IsCollisionEventType
  fullName: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase<T>.IsCollisionEventType
  nameWithType.vb: PhysicsEventHandlerBase(Of T).IsCollisionEventType
  fullName.vb: SombraStudios.Shared.Physics.Events.PhysicsEventHandlerBase(Of T).IsCollisionEventType
