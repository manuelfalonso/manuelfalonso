### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand
  commentId: T:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand
  id: ComplexCommand
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  children:
  - SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.#ctor(SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver,System.String,System.String)
  - SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute
  - SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo
  langs:
  - csharp
  - vb
  name: ComplexCommand
  nameWithType: ComplexCommand
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand
  type: Class
  source:
    remote:
      path: WIP/Command/ComplexCommand.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: ComplexCommand
    path: ../Assets/Sombra Studios/Shared/WIP/Command/ComplexCommand.cs
    startLine: 14
  assemblies:
  - SombraStudios.Shared
  namespace: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  summary: >-
    Concrete Commands implement various kinds of requests. 

    A concrete command isnâ€™t supposed to perform the work on its own, 

    but rather to pass the call to one of the business logic objects. 


    Parameters required to execute a method on a receiving object can 

    be declared as fields in the concrete command. You can make command 

    objects immutable by only allowing the initialization of these 

    fields via the constructor.


    In this example the command will concatenate a string to another through the receiver
  example: []
  syntax:
    content: 'public class ComplexCommand : ICommand'
    content.vb: Public Class ComplexCommand Implements ICommand
  inheritance:
  - System.Object
  implements:
  - SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.#ctor(SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver,System.String,System.String)
  commentId: M:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.#ctor(SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver,System.String,System.String)
  id: '#ctor(SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver,System.String,System.String)'
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand
  langs:
  - csharp
  - vb
  name: ComplexCommand(CommandReceiver, string, string)
  nameWithType: ComplexCommand.ComplexCommand(CommandReceiver, string, string)
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.ComplexCommand(SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver, string, string)
  type: Constructor
  source:
    remote:
      path: WIP/Command/ComplexCommand.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: .ctor
    path: ../Assets/Sombra Studios/Shared/WIP/Command/ComplexCommand.cs
    startLine: 21
  assemblies:
  - SombraStudios.Shared
  namespace: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  syntax:
    content: public ComplexCommand(CommandReceiver receiver, string string1, string string2)
    parameters:
    - id: receiver
      type: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver
    - id: string1
      type: System.String
    - id: string2
      type: System.String
    content.vb: Public Sub New(receiver As CommandReceiver, string1 As String, string2 As String)
  overload: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.#ctor*
  nameWithType.vb: ComplexCommand.New(CommandReceiver, String, String)
  fullName.vb: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.New(SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver, String, String)
  name.vb: New(CommandReceiver, String, String)
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute
  commentId: M:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute
  id: Execute
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: ComplexCommand.Execute()
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute()
  type: Method
  source:
    remote:
      path: WIP/Command/ComplexCommand.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Execute
    path: ../Assets/Sombra Studios/Shared/WIP/Command/ComplexCommand.cs
    startLine: 29
  assemblies:
  - SombraStudios.Shared
  namespace: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  example: []
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute()
  overload: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute*
  implements:
  - SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Execute
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo
  commentId: M:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo
  id: Undo
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand
  langs:
  - csharp
  - vb
  name: Undo()
  nameWithType: ComplexCommand.Undo()
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo()
  type: Method
  source:
    remote:
      path: WIP/Command/ComplexCommand.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Undo
    path: ../Assets/Sombra Studios/Shared/WIP/Command/ComplexCommand.cs
    startLine: 34
  assemblies:
  - SombraStudios.Shared
  namespace: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  example: []
  syntax:
    content: public void Undo()
    content.vb: Public Sub Undo()
  overload: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo*
  implements:
  - SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Undo
references:
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  commentId: N:SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  href: SombraStudios.html
  name: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  nameWithType: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Examples
    name: Examples
    href: SombraStudios.Shared.Examples.html
  - name: .
  - uid: SombraStudios.Shared.Examples.Patterns
    name: Patterns
    href: SombraStudios.Shared.Examples.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
    name: Command
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Examples
    name: Examples
    href: SombraStudios.Shared.Examples.html
  - name: .
  - uid: SombraStudios.Shared.Examples.Patterns
    name: Patterns
    href: SombraStudios.Shared.Examples.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
    name: Command
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand
  commentId: T:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html
  name: ICommand
  nameWithType: ICommand
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.#ctor*
  commentId: Overload:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.#ctor
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ComplexCommand__ctor_SombraStudios_Shared_Examples_Patterns_Behavioural_Command_CommandReceiver_System_String_System_String_
  name: ComplexCommand
  nameWithType: ComplexCommand.ComplexCommand
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.ComplexCommand
  nameWithType.vb: ComplexCommand.New
  fullName.vb: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.New
  name.vb: New
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver
  commentId: T:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver.html
  name: CommandReceiver
  nameWithType: CommandReceiver
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.CommandReceiver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute*
  commentId: Overload:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ComplexCommand_Execute
  name: Execute
  nameWithType: ComplexCommand.Execute
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Execute
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Execute
  commentId: M:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Execute
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ICommand_Execute
  name: Execute()
  nameWithType: ICommand.Execute()
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Execute()
  spec.csharp:
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Execute
    name: Execute
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ICommand_Execute
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Execute
    name: Execute
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ICommand_Execute
  - name: (
  - name: )
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo*
  commentId: Overload:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ComplexCommand_Undo
  name: Undo
  nameWithType: ComplexCommand.Undo
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ComplexCommand.Undo
- uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Undo
  commentId: M:SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Undo
  parent: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand
  href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ICommand_Undo
  name: Undo()
  nameWithType: ICommand.Undo()
  fullName: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Undo()
  spec.csharp:
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Undo
    name: Undo
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ICommand_Undo
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.Undo
    name: Undo
    href: SombraStudios.Shared.Examples.Patterns.Behavioural.Command.ICommand.html#SombraStudios_Shared_Examples_Patterns_Behavioural_Command_ICommand_Undo
  - name: (
  - name: )
