### YamlMime:ManagedReference
items:
- uid: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable
  commentId: T:UnityEngine.XR.Content.Interaction.XRInfiniteInteractable
  id: XRInfiniteInteractable
  parent: UnityEngine.XR.Content.Interaction
  children:
  - UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active
  langs:
  - csharp
  - vb
  name: XRInfiniteInteractable
  nameWithType: XRInfiniteInteractable
  fullName: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable
  type: Class
  source:
    remote:
      path: XR/XRInfiniteInteractable.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: XRInfiniteInteractable
    path: ../Assets/Sombra Studios/Shared/XR/XRInfiniteInteractable.cs
    startLine: 10
  assemblies:
  - SombraStudios.Shared.XR
  namespace: UnityEngine.XR.Content.Interaction
  summary: >-
    This component makes sure that the attached <code>Interactor</code> always have an interactable selected.

    This is accomplished by forcing the <code>Interactor</code> to select a new <code>Interactable Prefab</code> instance whenever

    it loses the current selected interactable.
  example: []
  syntax:
    content: >-
      [DisallowMultipleComponent]

      [RequireComponent(typeof(XRBaseInteractor))]

      public class XRInfiniteInteractable : MonoBehaviour
    content.vb: >-
      <DisallowMultipleComponent>

      <RequireComponent(GetType(XRBaseInteractor))>

      Public Class XRInfiniteInteractable Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  attributes:
  - type: UnityEngine.DisallowMultipleComponent
    ctor: UnityEngine.DisallowMultipleComponent.#ctor
    arguments: []
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
- uid: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active
  commentId: P:UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active
  id: Active
  parent: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: XRInfiniteInteractable.Active
  fullName: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active
  type: Property
  source:
    remote:
      path: XR/XRInfiniteInteractable.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Active
    path: ../Assets/Sombra Studios/Shared/XR/XRInfiniteInteractable.cs
    startLine: 30
  assemblies:
  - SombraStudios.Shared.XR
  namespace: UnityEngine.XR.Content.Interaction
  summary: Whether infinite spawning is enabled.
  example: []
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active*
references:
- uid: UnityEngine.XR.Content.Interaction
  commentId: N:UnityEngine.XR.Content.Interaction
  href: UnityEngine.html
  name: UnityEngine.XR.Content.Interaction
  nameWithType: UnityEngine.XR.Content.Interaction
  fullName: UnityEngine.XR.Content.Interaction
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    href: UnityEngine.html
  - name: .
  - uid: UnityEngine.XR
    name: XR
    href: UnityEngine.XR.html
  - name: .
  - uid: UnityEngine.XR.Content
    name: Content
    href: UnityEngine.XR.Content.html
  - name: .
  - uid: UnityEngine.XR.Content.Interaction
    name: Interaction
    href: UnityEngine.XR.Content.Interaction.html
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    href: UnityEngine.html
  - name: .
  - uid: UnityEngine.XR
    name: XR
    href: UnityEngine.XR.html
  - name: .
  - uid: UnityEngine.XR.Content
    name: Content
    href: UnityEngine.XR.Content.html
  - name: .
  - uid: UnityEngine.XR.Content.Interaction
    name: Interaction
    href: UnityEngine.XR.Content.Interaction.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active*
  commentId: Overload:UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active
  href: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.html#UnityEngine_XR_Content_Interaction_XRInfiniteInteractable_Active
  name: Active
  nameWithType: XRInfiniteInteractable.Active
  fullName: UnityEngine.XR.Content.Interaction.XRInfiniteInteractable.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
