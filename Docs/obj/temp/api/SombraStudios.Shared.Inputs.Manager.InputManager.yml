### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Inputs.Manager.InputManager
  commentId: T:SombraStudios.Shared.Inputs.Manager.InputManager
  id: InputManager
  parent: SombraStudios.Shared.Inputs.Manager
  children:
  - SombraStudios.Shared.Inputs.Manager.InputManager.Awake
  - SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled(UnityEngine.InputSystem.InputActionReference)
  - SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled(UnityEngine.InputSystem.InputActionReference)
  - SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs
  - SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled(UnityEngine.InputSystem.InputActionReference)
  - SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled(UnityEngine.InputSystem.InputActionReference)
  - SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs
  - SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs
  - SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs
  - SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs(UnityEngine.InputSystem.InputActionReference[])
  - SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs(UnityEngine.InputSystem.InputActionReference[])
  langs:
  - csharp
  - vb
  name: InputManager
  nameWithType: InputManager
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager
  type: Class
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: InputManager
    path: ../Inputs/Manager/InputManager.cs
    startLine: 11
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Manages input actions and maps, enabling and disabling them as needed.
  example: []
  syntax:
    content: 'public class InputManager : Singleton<InputManager>'
    content.vb: Public Class InputManager Inherits Singleton(Of InputManager)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  inheritedMembers:
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}._instance
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.HasInstance
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.TryGetInstance
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Current
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Instance
  - SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.OnDestroy
  extensionMethods:
  - UnityEngine.MonoBehaviour.SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1({T}@)
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.Awake
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.Awake
  id: Awake
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: InputManager.Awake()
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.Awake()
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Awake
    path: ../Inputs/Manager/InputManager.cs
    startLine: 24
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Called when the script instance is being loaded.
  example: []
  syntax:
    content: protected override void Awake()
    content.vb: Protected Overrides Sub Awake()
  overridden: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Awake
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.Awake*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs
  id: DisableAllInputs
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: DisableAllInputs()
  nameWithType: InputManager.DisableAllInputs()
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs()
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: DisableAllInputs
    path: ../Inputs/Manager/InputManager.cs
    startLine: 51
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Disables all enabled input actions.
  example: []
  syntax:
    content: public void DisableAllInputs()
    content.vb: Public Sub DisableAllInputs()
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs
  id: EnableAllInputs
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: EnableAllInputs()
  nameWithType: InputManager.EnableAllInputs()
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs()
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: EnableAllInputs
    path: ../Inputs/Manager/InputManager.cs
    startLine: 59
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Enables all disabled input actions.
  example: []
  syntax:
    content: public void EnableAllInputs()
    content.vb: Public Sub EnableAllInputs()
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled(UnityEngine.InputSystem.InputActionReference)
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled(UnityEngine.InputSystem.InputActionReference)
  id: EnableActionMapIfDisabled(UnityEngine.InputSystem.InputActionReference)
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: EnableActionMapIfDisabled(InputActionReference)
  nameWithType: InputManager.EnableActionMapIfDisabled(InputActionReference)
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled(UnityEngine.InputSystem.InputActionReference)
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: EnableActionMapIfDisabled
    path: ../Inputs/Manager/InputManager.cs
    startLine: 68
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Enables the action map if it is currently disabled.
  example: []
  syntax:
    content: public void EnableActionMapIfDisabled(InputActionReference inputActionReference)
    parameters:
    - id: inputActionReference
      type: UnityEngine.InputSystem.InputActionReference
      description: The input action reference.
    content.vb: Public Sub EnableActionMapIfDisabled(inputActionReference As InputActionReference)
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled(UnityEngine.InputSystem.InputActionReference)
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled(UnityEngine.InputSystem.InputActionReference)
  id: EnableActionIfDisabled(UnityEngine.InputSystem.InputActionReference)
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: EnableActionIfDisabled(InputActionReference)
  nameWithType: InputManager.EnableActionIfDisabled(InputActionReference)
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled(UnityEngine.InputSystem.InputActionReference)
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: EnableActionIfDisabled
    path: ../Inputs/Manager/InputManager.cs
    startLine: 83
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Enables the action if it is currently disabled.
  example: []
  syntax:
    content: public void EnableActionIfDisabled(InputActionReference inputActionReference)
    parameters:
    - id: inputActionReference
      type: UnityEngine.InputSystem.InputActionReference
      description: The input action reference.
    content.vb: Public Sub EnableActionIfDisabled(inputActionReference As InputActionReference)
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled(UnityEngine.InputSystem.InputActionReference)
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled(UnityEngine.InputSystem.InputActionReference)
  id: DisableActionMapIfEnabled(UnityEngine.InputSystem.InputActionReference)
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: DisableActionMapIfEnabled(InputActionReference)
  nameWithType: InputManager.DisableActionMapIfEnabled(InputActionReference)
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled(UnityEngine.InputSystem.InputActionReference)
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: DisableActionMapIfEnabled
    path: ../Inputs/Manager/InputManager.cs
    startLine: 98
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Disables the action map if it is currently enabled.
  example: []
  syntax:
    content: public void DisableActionMapIfEnabled(InputActionReference inputActionReference)
    parameters:
    - id: inputActionReference
      type: UnityEngine.InputSystem.InputActionReference
      description: The input action reference.
    content.vb: Public Sub DisableActionMapIfEnabled(inputActionReference As InputActionReference)
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled(UnityEngine.InputSystem.InputActionReference)
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled(UnityEngine.InputSystem.InputActionReference)
  id: DisableActionIfEnabled(UnityEngine.InputSystem.InputActionReference)
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: DisableActionIfEnabled(InputActionReference)
  nameWithType: InputManager.DisableActionIfEnabled(InputActionReference)
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled(UnityEngine.InputSystem.InputActionReference)
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: DisableActionIfEnabled
    path: ../Inputs/Manager/InputManager.cs
    startLine: 113
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Disables the action if it is currently enabled.
  example: []
  syntax:
    content: public void DisableActionIfEnabled(InputActionReference inputActionReference)
    parameters:
    - id: inputActionReference
      type: UnityEngine.InputSystem.InputActionReference
      description: The input action reference.
    content.vb: Public Sub DisableActionIfEnabled(inputActionReference As InputActionReference)
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs(UnityEngine.InputSystem.InputActionReference[])
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs(UnityEngine.InputSystem.InputActionReference[])
  id: StopInputs(UnityEngine.InputSystem.InputActionReference[])
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: StopInputs(InputActionReference[])
  nameWithType: InputManager.StopInputs(InputActionReference[])
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs(UnityEngine.InputSystem.InputActionReference[])
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: StopInputs
    path: ../Inputs/Manager/InputManager.cs
    startLine: 128
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Stops all input actions, with optional exceptions.
  example: []
  syntax:
    content: public void StopInputs(InputActionReference[] exceptions = null)
    parameters:
    - id: exceptions
      type: UnityEngine.InputSystem.InputActionReference[]
      description: Array of input action references to exclude from stopping.
    content.vb: Public Sub StopInputs(exceptions As InputActionReference() = Nothing)
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs*
  nameWithType.vb: InputManager.StopInputs(InputActionReference())
  fullName.vb: SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs(UnityEngine.InputSystem.InputActionReference())
  name.vb: StopInputs(InputActionReference())
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs(UnityEngine.InputSystem.InputActionReference[])
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs(UnityEngine.InputSystem.InputActionReference[])
  id: StopMapInputs(UnityEngine.InputSystem.InputActionReference[])
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: StopMapInputs(InputActionReference[])
  nameWithType: InputManager.StopMapInputs(InputActionReference[])
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs(UnityEngine.InputSystem.InputActionReference[])
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: StopMapInputs
    path: ../Inputs/Manager/InputManager.cs
    startLine: 151
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Stops all input action maps, with optional exceptions.
  example: []
  syntax:
    content: public void StopMapInputs(InputActionReference[] exceptions = null)
    parameters:
    - id: exceptions
      type: UnityEngine.InputSystem.InputActionReference[]
      description: Array of input action references to exclude from stopping.
    content.vb: Public Sub StopMapInputs(exceptions As InputActionReference() = Nothing)
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs*
  nameWithType.vb: InputManager.StopMapInputs(InputActionReference())
  fullName.vb: SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs(UnityEngine.InputSystem.InputActionReference())
  name.vb: StopMapInputs(InputActionReference())
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs
  id: ResumeInputs
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: ResumeInputs()
  nameWithType: InputManager.ResumeInputs()
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs()
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: ResumeInputs
    path: ../Inputs/Manager/InputManager.cs
    startLine: 173
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Resumes all previously enabled input actions.
  example: []
  syntax:
    content: public void ResumeInputs()
    content.vb: Public Sub ResumeInputs()
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs*
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs
  commentId: M:SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs
  id: ResumeMapInputs
  parent: SombraStudios.Shared.Inputs.Manager.InputManager
  langs:
  - csharp
  - vb
  name: ResumeMapInputs()
  nameWithType: InputManager.ResumeMapInputs()
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs()
  type: Method
  source:
    remote:
      path: Inputs/Manager/InputManager.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: ResumeMapInputs
    path: ../Inputs/Manager/InputManager.cs
    startLine: 184
  assemblies:
  - SombraStudios.Shared.Inputs
  namespace: SombraStudios.Shared.Inputs.Manager
  summary: Resumes all previously enabled input action maps.
  example: []
  syntax:
    content: public void ResumeMapInputs()
    content.vb: Public Sub ResumeMapInputs()
  overload: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs*
references:
- uid: SombraStudios.Shared.Inputs.Manager
  commentId: N:SombraStudios.Shared.Inputs.Manager
  href: SombraStudios.html
  name: SombraStudios.Shared.Inputs.Manager
  nameWithType: SombraStudios.Shared.Inputs.Manager
  fullName: SombraStudios.Shared.Inputs.Manager
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Inputs
    name: Inputs
    href: SombraStudios.Shared.Inputs.html
  - name: .
  - uid: SombraStudios.Shared.Inputs.Manager
    name: Manager
    href: SombraStudios.Shared.Inputs.Manager.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Inputs
    name: Inputs
    href: SombraStudios.Shared.Inputs.html
  - name: .
  - uid: SombraStudios.Shared.Inputs.Manager
    name: Manager
    href: SombraStudios.Shared.Inputs.Manager.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  commentId: T:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  parent: SombraStudios.Shared.Patterns.Creational.Singleton
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html
  name: Singleton<InputManager>
  nameWithType: Singleton<InputManager>
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>
  nameWithType.vb: Singleton(Of InputManager)
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager)
  name.vb: Singleton(Of InputManager)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
    name: Singleton
  - name: <
  - uid: SombraStudios.Shared.Inputs.Manager.InputManager
    name: InputManager
    href: SombraStudios.Shared.Inputs.Manager.InputManager.html
  - name: '>'
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
    name: Singleton
  - name: (
  - name: Of
  - name: " "
  - uid: SombraStudios.Shared.Inputs.Manager.InputManager
    name: InputManager
    href: SombraStudios.Shared.Inputs.Manager.InputManager.html
  - name: )
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}._instance
  commentId: F:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}._instance
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1._instance
  name: _instance
  nameWithType: Singleton<InputManager>._instance
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>._instance
  nameWithType.vb: Singleton(Of InputManager)._instance
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager)._instance
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.HasInstance
  commentId: P:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.HasInstance
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.HasInstance
  name: HasInstance
  nameWithType: Singleton<InputManager>.HasInstance
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>.HasInstance
  nameWithType.vb: Singleton(Of InputManager).HasInstance
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager).HasInstance
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.TryGetInstance
  commentId: M:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.TryGetInstance
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.TryGetInstance
  name: TryGetInstance()
  nameWithType: Singleton<InputManager>.TryGetInstance()
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>.TryGetInstance()
  nameWithType.vb: Singleton(Of InputManager).TryGetInstance()
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager).TryGetInstance()
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.TryGetInstance
    name: TryGetInstance
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.TryGetInstance
    name: TryGetInstance
  - name: (
  - name: )
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Current
  commentId: P:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Current
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Current
  name: Current
  nameWithType: Singleton<InputManager>.Current
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>.Current
  nameWithType.vb: Singleton(Of InputManager).Current
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager).Current
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Instance
  commentId: P:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Instance
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<InputManager>.Instance
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>.Instance
  nameWithType.vb: Singleton(Of InputManager).Instance
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager).Instance
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.OnDestroy
  commentId: M:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.OnDestroy
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.OnDestroy
  name: OnDestroy()
  nameWithType: Singleton<InputManager>.OnDestroy()
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>.OnDestroy()
  nameWithType.vb: Singleton(Of InputManager).OnDestroy()
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager).OnDestroy()
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.OnDestroy
    name: OnDestroy
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.OnDestroy
    name: OnDestroy
  - name: (
  - name: )
- uid: UnityEngine.MonoBehaviour.SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1({T}@)
  commentId: M:SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  parent: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  definition: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  name: SafeInit<T>(MonoBehaviour, ref T)
  nameWithType: MonoBehaviourExtensions.SafeInit<T>(MonoBehaviour, ref T)
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit<T>(UnityEngine.MonoBehaviour, ref T)
  nameWithType.vb: MonoBehaviourExtensions.SafeInit(Of T)(MonoBehaviour, T)
  fullName.vb: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit(Of T)(UnityEngine.MonoBehaviour, T)
  name.vb: SafeInit(Of T)(MonoBehaviour, T)
  spec.csharp:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
  commentId: T:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
    name: Singleton
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1
    name: Singleton
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SombraStudios.Shared.Patterns.Creational.Singleton
  commentId: N:SombraStudios.Shared.Patterns.Creational.Singleton
  href: SombraStudios.html
  name: SombraStudios.Shared.Patterns.Creational.Singleton
  nameWithType: SombraStudios.Shared.Patterns.Creational.Singleton
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Creational
    name: Creational
    href: SombraStudios.Shared.Patterns.Creational.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton
    name: Singleton
    href: SombraStudios.Shared.Patterns.Creational.Singleton.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Creational
    name: Creational
    href: SombraStudios.Shared.Patterns.Creational.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton
    name: Singleton
    href: SombraStudios.Shared.Patterns.Creational.Singleton.html
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1._instance
  commentId: F:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1._instance
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1__instance
  name: _instance
  nameWithType: Singleton<T>._instance
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>._instance
  nameWithType.vb: Singleton(Of T)._instance
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T)._instance
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.HasInstance
  commentId: P:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.HasInstance
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_HasInstance
  name: HasInstance
  nameWithType: Singleton<T>.HasInstance
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>.HasInstance
  nameWithType.vb: Singleton(Of T).HasInstance
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T).HasInstance
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.TryGetInstance
  commentId: M:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.TryGetInstance
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_TryGetInstance
  name: TryGetInstance()
  nameWithType: Singleton<T>.TryGetInstance()
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>.TryGetInstance()
  nameWithType.vb: Singleton(Of T).TryGetInstance()
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T).TryGetInstance()
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.TryGetInstance
    name: TryGetInstance
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_TryGetInstance
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.TryGetInstance
    name: TryGetInstance
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_TryGetInstance
  - name: (
  - name: )
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Current
  commentId: P:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Current
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_Current
  name: Current
  nameWithType: Singleton<T>.Current
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>.Current
  nameWithType.vb: Singleton(Of T).Current
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T).Current
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Instance
  commentId: P:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Instance
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T).Instance
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.OnDestroy
  commentId: M:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.OnDestroy
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_OnDestroy
  name: OnDestroy()
  nameWithType: Singleton<T>.OnDestroy()
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>.OnDestroy()
  nameWithType.vb: Singleton(Of T).OnDestroy()
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T).OnDestroy()
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.OnDestroy
    name: OnDestroy
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_OnDestroy
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.OnDestroy
    name: OnDestroy
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_OnDestroy
  - name: (
  - name: )
- uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  commentId: M:SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
  isExternal: true
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  name: SafeInit<T>(MonoBehaviour, ref T)
  nameWithType: MonoBehaviourExtensions.SafeInit<T>(MonoBehaviour, ref T)
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit<T>(UnityEngine.MonoBehaviour, ref T)
  nameWithType.vb: MonoBehaviourExtensions.SafeInit(Of T)(MonoBehaviour, T)
  fullName.vb: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit(Of T)(UnityEngine.MonoBehaviour, T)
  name.vb: SafeInit(Of T)(MonoBehaviour, T)
  spec.csharp:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.SafeInit``1(UnityEngine.MonoBehaviour,``0@)
    name: SafeInit
    href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html#SombraStudios_Shared_Extensions_MonoBehaviourExtensions_SafeInit__1_UnityEngine_MonoBehaviour___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.MonoBehaviour
    name: MonoBehaviour
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  commentId: T:SombraStudios.Shared.Extensions.MonoBehaviourExtensions
  parent: SombraStudios.Shared.Extensions
  href: SombraStudios.Shared.Extensions.MonoBehaviourExtensions.html
  name: MonoBehaviourExtensions
  nameWithType: MonoBehaviourExtensions
  fullName: SombraStudios.Shared.Extensions.MonoBehaviourExtensions
- uid: SombraStudios.Shared.Extensions
  commentId: N:SombraStudios.Shared.Extensions
  href: SombraStudios.html
  name: SombraStudios.Shared.Extensions
  nameWithType: SombraStudios.Shared.Extensions
  fullName: SombraStudios.Shared.Extensions
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Extensions
    name: Extensions
    href: SombraStudios.Shared.Extensions.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Extensions
    name: Extensions
    href: SombraStudios.Shared.Extensions.html
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Awake
  commentId: M:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Awake
  parent: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}
  definition: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<InputManager>.Awake()
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<SombraStudios.Shared.Inputs.Manager.InputManager>.Awake()
  nameWithType.vb: Singleton(Of InputManager).Awake()
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of SombraStudios.Shared.Inputs.Manager.InputManager).Awake()
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Awake
    name: Awake
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton{SombraStudios.Shared.Inputs.Manager.InputManager}.Awake
    name: Awake
  - name: (
  - name: )
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.Awake*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.Awake
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_Awake
  name: Awake
  nameWithType: InputManager.Awake
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.Awake
- uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Awake
  commentId: M:SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Awake
  href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton(Of T).Awake()
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Awake
    name: Awake
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_Awake
  - name: (
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton`1.Awake
    name: Awake
    href: SombraStudios.Shared.Patterns.Creational.Singleton.Singleton-1.html#SombraStudios_Shared_Patterns_Creational_Singleton_Singleton_1_Awake
  - name: (
  - name: )
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_DisableAllInputs
  name: DisableAllInputs
  nameWithType: InputManager.DisableAllInputs
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.DisableAllInputs
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_EnableAllInputs
  name: EnableAllInputs
  nameWithType: InputManager.EnableAllInputs
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.EnableAllInputs
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_EnableActionMapIfDisabled_UnityEngine_InputSystem_InputActionReference_
  name: EnableActionMapIfDisabled
  nameWithType: InputManager.EnableActionMapIfDisabled
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionMapIfDisabled
- uid: UnityEngine.InputSystem.InputActionReference
  commentId: T:UnityEngine.InputSystem.InputActionReference
  parent: UnityEngine.InputSystem
  isExternal: true
  name: InputActionReference
  nameWithType: InputActionReference
  fullName: UnityEngine.InputSystem.InputActionReference
- uid: UnityEngine.InputSystem
  commentId: N:UnityEngine.InputSystem
  isExternal: true
  name: UnityEngine.InputSystem
  nameWithType: UnityEngine.InputSystem
  fullName: UnityEngine.InputSystem
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.InputSystem
    name: InputSystem
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.InputSystem
    name: InputSystem
    isExternal: true
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_EnableActionIfDisabled_UnityEngine_InputSystem_InputActionReference_
  name: EnableActionIfDisabled
  nameWithType: InputManager.EnableActionIfDisabled
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.EnableActionIfDisabled
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_DisableActionMapIfEnabled_UnityEngine_InputSystem_InputActionReference_
  name: DisableActionMapIfEnabled
  nameWithType: InputManager.DisableActionMapIfEnabled
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionMapIfEnabled
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_DisableActionIfEnabled_UnityEngine_InputSystem_InputActionReference_
  name: DisableActionIfEnabled
  nameWithType: InputManager.DisableActionIfEnabled
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.DisableActionIfEnabled
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_StopInputs_UnityEngine_InputSystem_InputActionReference___
  name: StopInputs
  nameWithType: InputManager.StopInputs
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.StopInputs
- uid: UnityEngine.InputSystem.InputActionReference[]
  isExternal: true
  name: InputActionReference[]
  nameWithType: InputActionReference[]
  fullName: UnityEngine.InputSystem.InputActionReference[]
  nameWithType.vb: InputActionReference()
  fullName.vb: UnityEngine.InputSystem.InputActionReference()
  name.vb: InputActionReference()
  spec.csharp:
  - uid: UnityEngine.InputSystem.InputActionReference
    name: InputActionReference
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.InputSystem.InputActionReference
    name: InputActionReference
    isExternal: true
  - name: (
  - name: )
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_StopMapInputs_UnityEngine_InputSystem_InputActionReference___
  name: StopMapInputs
  nameWithType: InputManager.StopMapInputs
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.StopMapInputs
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_ResumeInputs
  name: ResumeInputs
  nameWithType: InputManager.ResumeInputs
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeInputs
- uid: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs*
  commentId: Overload:SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs
  href: SombraStudios.Shared.Inputs.Manager.InputManager.html#SombraStudios_Shared_Inputs_Manager_InputManager_ResumeMapInputs
  name: ResumeMapInputs
  nameWithType: InputManager.ResumeMapInputs
  fullName: SombraStudios.Shared.Inputs.Manager.InputManager.ResumeMapInputs
