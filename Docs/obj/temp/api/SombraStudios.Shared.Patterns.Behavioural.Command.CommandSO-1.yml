### YamlMime:ManagedReference
items:
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1
  commentId: T:SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1
  id: CommandSO`1
  parent: SombraStudios.Shared.Patterns.Behavioural.Command
  children:
  - SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Execute(`0)
  - SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Undo(`0)
  langs:
  - csharp
  - vb
  name: CommandSO<T>
  nameWithType: CommandSO<T>
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO<T>
  type: Class
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: CommandSO
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 26
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: >-
    Abstract base class for parameterized command ScriptableObjects.

    Implements the ICommand interface with a parameterized type.
  example: []
  syntax:
    content: 'public abstract class CommandSO<T> : ScriptableObject, ICommand<T>'
    typeParameters:
    - id: T
      description: The type of data used by the command.
    content.vb: Public MustInherit Class CommandSO(Of T) Inherits ScriptableObject Implements ICommand(Of T)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  implements:
  - SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}
  nameWithType.vb: CommandSO(Of T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO(Of T)
  name.vb: CommandSO(Of T)
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Execute(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Execute(`0)
  id: Execute(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1
  langs:
  - csharp
  - vb
  name: Execute(T)
  nameWithType: CommandSO<T>.Execute(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO<T>.Execute(T)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Execute
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 32
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: Executes the command with the provided data.
  example: []
  syntax:
    content: public abstract void Execute(T data)
    parameters:
    - id: data
      type: '{T}'
      description: The data needed for the command execution.
    content.vb: Public MustOverride Sub Execute(data As T)
  overload: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Execute*
  implements:
  - SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}.Execute({T})
  nameWithType.vb: CommandSO(Of T).Execute(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO(Of T).Execute(T)
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Undo(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Undo(`0)
  id: Undo(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1
  langs:
  - csharp
  - vb
  name: Undo(T)
  nameWithType: CommandSO<T>.Undo(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO<T>.Undo(T)
  type: Method
  source:
    remote:
      path: Patterns/Behavioural/Command/CommandSO.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: Undo
    path: ../Patterns/Behavioural/Command/CommandSO.cs
    startLine: 38
  assemblies:
  - SombraStudios.Shared.Patterns
  namespace: SombraStudios.Shared.Patterns.Behavioural.Command
  summary: Undoes the command with the provided data, restoring the object's state.
  example: []
  syntax:
    content: public abstract void Undo(T data)
    parameters:
    - id: data
      type: '{T}'
      description: The data needed for the command undo operation.
    content.vb: Public MustOverride Sub Undo(data As T)
  overload: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Undo*
  implements:
  - SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}.Undo({T})
  nameWithType.vb: CommandSO(Of T).Undo(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO(Of T).Undo(T)
references:
- uid: SombraStudios.Shared.Patterns.Behavioural.Command
  commentId: N:SombraStudios.Shared.Patterns.Behavioural.Command
  href: SombraStudios.html
  name: SombraStudios.Shared.Patterns.Behavioural.Command
  nameWithType: SombraStudios.Shared.Patterns.Behavioural.Command
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command
  spec.csharp:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command
    name: Command
    href: SombraStudios.Shared.Patterns.Behavioural.Command.html
  spec.vb:
  - uid: SombraStudios
    name: SombraStudios
    href: SombraStudios.html
  - name: .
  - uid: SombraStudios.Shared
    name: Shared
    href: SombraStudios.Shared.html
  - name: .
  - uid: SombraStudios.Shared.Patterns
    name: Patterns
    href: SombraStudios.Shared.Patterns.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural
    name: Behavioural
    href: SombraStudios.Shared.Patterns.Behavioural.html
  - name: .
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command
    name: Command
    href: SombraStudios.Shared.Patterns.Behavioural.Command.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}
  commentId: T:SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}
  parent: SombraStudios.Shared.Patterns.Behavioural.Command
  definition: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
  href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html
  name: ICommand<T>
  nameWithType: ICommand<T>
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand<T>
  nameWithType.vb: ICommand(Of T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand(Of T)
  name.vb: ICommand(Of T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
    name: ICommand
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
    name: ICommand
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
  commentId: T:SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
  href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html
  name: ICommand<T>
  nameWithType: ICommand<T>
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand<T>
  nameWithType.vb: ICommand(Of T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand(Of T)
  name.vb: ICommand(Of T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
    name: ICommand
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1
    name: ICommand
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Execute*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Execute
  href: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_CommandSO_1_Execute__0_
  name: Execute
  nameWithType: CommandSO<T>.Execute
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO<T>.Execute
  nameWithType.vb: CommandSO(Of T).Execute
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO(Of T).Execute
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}.Execute({T})
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}.Execute(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}
  definition: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Execute(`0)
  href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Execute__0_
  name: Execute(T)
  nameWithType: ICommand<T>.Execute(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand<T>.Execute(T)
  nameWithType.vb: ICommand(Of T).Execute(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand(Of T).Execute(T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}.Execute(`0)
    name: Execute
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Execute__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}.Execute(`0)
    name: Execute
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Execute__0_
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Execute(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Execute(`0)
  href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Execute__0_
  name: Execute(T)
  nameWithType: ICommand<T>.Execute(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand<T>.Execute(T)
  nameWithType.vb: ICommand(Of T).Execute(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand(Of T).Execute(T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Execute(`0)
    name: Execute
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Execute__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Execute(`0)
    name: Execute
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Execute__0_
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Undo*
  commentId: Overload:SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO`1.Undo
  href: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_CommandSO_1_Undo__0_
  name: Undo
  nameWithType: CommandSO<T>.Undo
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO<T>.Undo
  nameWithType.vb: CommandSO(Of T).Undo
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.CommandSO(Of T).Undo
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}.Undo({T})
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}.Undo(`0)
  parent: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{{T}}
  definition: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Undo(`0)
  href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Undo__0_
  name: Undo(T)
  nameWithType: ICommand<T>.Undo(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand<T>.Undo(T)
  nameWithType.vb: ICommand(Of T).Undo(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand(Of T).Undo(T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}.Undo(`0)
    name: Undo
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Undo__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand{`0}.Undo(`0)
    name: Undo
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Undo__0_
  - name: (
  - name: T
  - name: )
- uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Undo(`0)
  commentId: M:SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Undo(`0)
  href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Undo__0_
  name: Undo(T)
  nameWithType: ICommand<T>.Undo(T)
  fullName: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand<T>.Undo(T)
  nameWithType.vb: ICommand(Of T).Undo(T)
  fullName.vb: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand(Of T).Undo(T)
  spec.csharp:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Undo(`0)
    name: Undo
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Undo__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand`1.Undo(`0)
    name: Undo
    href: SombraStudios.Shared.Patterns.Behavioural.Command.ICommand-1.html#SombraStudios_Shared_Patterns_Behavioural_Command_ICommand_1_Undo__0_
  - name: (
  - name: T
  - name: )
