### YamlMime:ManagedReference
items:
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone
  commentId: T:UnityEngine.XR.Content.Interaction.ToggleComponentZone
  id: ToggleComponentZone
  parent: UnityEngine.XR.Content.Interaction
  children:
  - UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject
  - UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle
  - UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry
  - UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  langs:
  - csharp
  - vb
  name: ToggleComponentZone
  nameWithType: ToggleComponentZone
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone
  type: Class
  source:
    remote:
      path: Gameplay/ToggleComponentZone.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: ToggleComponentZone
    path: ../Assets/Sombra Studios/Shared/Gameplay/ToggleComponentZone.cs
    startLine: 6
  assemblies:
  - SombraStudios.Shared.Gameplay
  namespace: UnityEngine.XR.Content.Interaction
  summary: >-
    This component is designed to easily toggle a specific component on or off when an object

    enters the specified <xref href="UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [RequireComponent(typeof(Collider))]

      public class ToggleComponentZone : MonoBehaviour
    content.vb: >-
      <RequireComponent(GetType(Collider))>

      Public Class ToggleComponentZone Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  attributes:
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: UnityEngine.Collider
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  commentId: P:UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  id: triggerVolume
  parent: UnityEngine.XR.Content.Interaction.ToggleComponentZone
  langs:
  - csharp
  - vb
  name: triggerVolume
  nameWithType: ToggleComponentZone.triggerVolume
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  type: Property
  source:
    remote:
      path: Gameplay/ToggleComponentZone.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: triggerVolume
    path: ../Assets/Sombra Studios/Shared/Gameplay/ToggleComponentZone.cs
    startLine: 17
  assemblies:
  - SombraStudios.Shared.Gameplay
  namespace: UnityEngine.XR.Content.Interaction
  summary: >-
    Main Trigger Volume to detect the Activation Object within.

    Must be on same physics layer as the Activation Object.
  example: []
  syntax:
    content: public Collider triggerVolume { get; set; }
    parameters: []
    return:
      type: UnityEngine.Collider
    content.vb: Public Property triggerVolume As Collider
  overload: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume*
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject
  commentId: P:UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject
  id: activationObject
  parent: UnityEngine.XR.Content.Interaction.ToggleComponentZone
  langs:
  - csharp
  - vb
  name: activationObject
  nameWithType: ToggleComponentZone.activationObject
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject
  type: Property
  source:
    remote:
      path: Gameplay/ToggleComponentZone.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: activationObject
    path: ../Assets/Sombra Studios/Shared/Gameplay/ToggleComponentZone.cs
    startLine: 31
  assemblies:
  - SombraStudios.Shared.Gameplay
  namespace: UnityEngine.XR.Content.Interaction
  summary: >-
    Collider that will trigger the component to turn on or off when entering the Trigger Volume.

    Must have a Rigidbody component and be on the same physics layer as the Trigger Volume.
  example: []
  syntax:
    content: public Collider activationObject { get; set; }
    parameters: []
    return:
      type: UnityEngine.Collider
    content.vb: Public Property activationObject As Collider
  overload: UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject*
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle
  commentId: P:UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle
  id: componentToToggle
  parent: UnityEngine.XR.Content.Interaction.ToggleComponentZone
  langs:
  - csharp
  - vb
  name: componentToToggle
  nameWithType: ToggleComponentZone.componentToToggle
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle
  type: Property
  source:
    remote:
      path: Gameplay/ToggleComponentZone.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: componentToToggle
    path: ../Assets/Sombra Studios/Shared/Gameplay/ToggleComponentZone.cs
    startLine: 45
  assemblies:
  - SombraStudios.Shared.Gameplay
  namespace: UnityEngine.XR.Content.Interaction
  summary: >-
    Component to set the enabled state for. Will set the value to the

    Enable On Entry value upon entry and revert to original value on exit.
  example: []
  syntax:
    content: public Behaviour componentToToggle { get; set; }
    parameters: []
    return:
      type: UnityEngine.Behaviour
    content.vb: Public Property componentToToggle As Behaviour
  overload: UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle*
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry
  commentId: P:UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry
  id: enableOnEntry
  parent: UnityEngine.XR.Content.Interaction.ToggleComponentZone
  langs:
  - csharp
  - vb
  name: enableOnEntry
  nameWithType: ToggleComponentZone.enableOnEntry
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry
  type: Property
  source:
    remote:
      path: Gameplay/ToggleComponentZone.cs
      branch: main
      repo: https://github.com/manuelfalonso/Unity-Scripts.git
    id: enableOnEntry
    path: ../Assets/Sombra Studios/Shared/Gameplay/ToggleComponentZone.cs
    startLine: 58
  assemblies:
  - SombraStudios.Shared.Gameplay
  namespace: UnityEngine.XR.Content.Interaction
  summary: Sets whether to enable or disable the Component To Toggle upon entry into the Trigger Volume.
  example: []
  syntax:
    content: public bool enableOnEntry { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property enableOnEntry As Boolean
  overload: UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry*
references:
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  commentId: P:UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  href: UnityEngine.XR.Content.Interaction.ToggleComponentZone.html#UnityEngine_XR_Content_Interaction_ToggleComponentZone_triggerVolume
  name: triggerVolume
  nameWithType: ToggleComponentZone.triggerVolume
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
- uid: UnityEngine.XR.Content.Interaction
  commentId: N:UnityEngine.XR.Content.Interaction
  href: UnityEngine.html
  name: UnityEngine.XR.Content.Interaction
  nameWithType: UnityEngine.XR.Content.Interaction
  fullName: UnityEngine.XR.Content.Interaction
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    href: UnityEngine.html
  - name: .
  - uid: UnityEngine.XR
    name: XR
    href: UnityEngine.XR.html
  - name: .
  - uid: UnityEngine.XR.Content
    name: Content
    href: UnityEngine.XR.Content.html
  - name: .
  - uid: UnityEngine.XR.Content.Interaction
    name: Interaction
    href: UnityEngine.XR.Content.Interaction.html
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    href: UnityEngine.html
  - name: .
  - uid: UnityEngine.XR
    name: XR
    href: UnityEngine.XR.html
  - name: .
  - uid: UnityEngine.XR.Content
    name: Content
    href: UnityEngine.XR.Content.html
  - name: .
  - uid: UnityEngine.XR.Content.Interaction
    name: Interaction
    href: UnityEngine.XR.Content.Interaction.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume*
  commentId: Overload:UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
  href: UnityEngine.XR.Content.Interaction.ToggleComponentZone.html#UnityEngine_XR_Content_Interaction_ToggleComponentZone_triggerVolume
  name: triggerVolume
  nameWithType: ToggleComponentZone.triggerVolume
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.triggerVolume
- uid: UnityEngine.Collider
  commentId: T:UnityEngine.Collider
  parent: UnityEngine
  isExternal: true
  name: Collider
  nameWithType: Collider
  fullName: UnityEngine.Collider
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject*
  commentId: Overload:UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject
  href: UnityEngine.XR.Content.Interaction.ToggleComponentZone.html#UnityEngine_XR_Content_Interaction_ToggleComponentZone_activationObject
  name: activationObject
  nameWithType: ToggleComponentZone.activationObject
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.activationObject
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle*
  commentId: Overload:UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle
  href: UnityEngine.XR.Content.Interaction.ToggleComponentZone.html#UnityEngine_XR_Content_Interaction_ToggleComponentZone_componentToToggle
  name: componentToToggle
  nameWithType: ToggleComponentZone.componentToToggle
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.componentToToggle
- uid: UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry*
  commentId: Overload:UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry
  href: UnityEngine.XR.Content.Interaction.ToggleComponentZone.html#UnityEngine_XR_Content_Interaction_ToggleComponentZone_enableOnEntry
  name: enableOnEntry
  nameWithType: ToggleComponentZone.enableOnEntry
  fullName: UnityEngine.XR.Content.Interaction.ToggleComponentZone.enableOnEntry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
